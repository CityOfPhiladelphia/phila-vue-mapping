{"version":3,"file":"phila-vue-mapping.js","sources":["../node_modules/@fortawesome/pro-regular-svg-icons/faDotCircle.js","../node_modules/@fortawesome/pro-solid-svg-icons/faSearch.js","../node_modules/@fortawesome/pro-solid-svg-icons/faTimes.js","../node_modules/@fortawesome/pro-solid-svg-icons/faMapMarkerAlt.js","../node_modules/@fortawesome/pro-solid-svg-icons/faCaretLeft.js","../node_modules/@fortawesome/pro-solid-svg-icons/faCaretRight.js","../src/leaflet/util/bind-events.js","../src/leaflet/Map.vue","../src/leaflet/Control.vue","../src/leaflet/Geojson.vue","../src/leaflet/CircleMarker.vue","../src/leaflet/ControlCorner.vue","../src/leaflet/PopUp.vue","../src/leaflet/PopUpContent.vue","../src/leaflet/Polygon.vue","../src/leaflet/Polyline.vue","../src/esri-leaflet/TiledMapLayer.vue","../src/components/OpacitySlider.vue","../src/esri-leaflet/TiledOverlay.vue","../src/esri-leaflet/DynamicMapLayer.vue","../src/esri-leaflet/FeatureLayer.vue","../src/util/unique-id.js","../src/esri-leaflet/WebMap.vue","../src/esri-leaflet/WebMapLayer.vue","../src/components/AddressInput.vue","../src/components/AddressCandidateList.vue","../src/components/VectorMarker.vue","../src/components/PngMarker.vue","../src/components/BasemapToggleControl.vue","../src/components/BasemapSelectControl.vue","../src/components/FullScreenMapToggleTab.vue","../src/components/FullScreenMapToggleTabVertical.vue","../src/components/LocationControl.vue","../src/components/MeasureControl.vue","../src/components/LegendControl.vue","../src/components/BasemapTooltip.vue","../src/components/ModalAbout.vue","../src/cyclomedia/Button.vue","../src/leaflet/Circle.vue","../src/cyclomedia/RecordingCircle.vue","../src/util/svg-icon.js","../src/util/triangle-icon.js","../src/cyclomedia/SvgViewConeMarker.vue","../src/cyclomedia/Widget.vue","../src/pictometry/Button.vue","../src/pictometry/PngMarker.vue","../src/pictometry/ViewCone.vue","../src/pictometry/Widget.vue","../src/pictometry/Layer.vue","../src/store.js","../src/main.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'far';\nvar iconName = 'dot-circle';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f192';\nvar svgPathData = 'M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faDotCircle = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'search';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f002';\nvar svgPathData = 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faSearch = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'times';\nvar width = 352;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f00d';\nvar svgPathData = 'M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faTimes = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'map-marker-alt';\nvar width = 384;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f3c5';\nvar svgPathData = 'M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faMapMarkerAlt = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'caret-left';\nvar width = 192;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f0d9';\nvar svgPathData = 'M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faCaretLeft = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'caret-right';\nvar width = 192;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f0da';\nvar svgPathData = 'M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faCaretRight = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","// inspired by https://github.com/KoRiGaN/Vue2Leaflet/blob/master/src/utils/eventsBinder.js\r\nfunction bindEvents(vue, leafletElement, events) {\r\n  // get just leaflet events\r\n  const leafletEvents = Object.keys(events)\r\n                              .filter(eventName => {\r\n                                return eventName.startsWith('l-');\r\n                              })\r\n                              .map(eventName => eventName.slice(2));\r\n\r\n  for (let leafletEvent of leafletEvents) {\r\n    const vueEvent = 'l-' + leafletEvent;\r\n    leafletElement.on(leafletEvent, (e) => {\r\n      vue.$emit(vueEvent, e);\r\n    });\r\n  }\r\n}\r\n\r\nexport default bindEvents;\r\n","<template>\r\n  <div :class=\"this.mapContainerClass\">\r\n    <!-- the leaflet map -->\r\n    <div class=\"map\"\r\n         ref=\"map\"\r\n         id=\"map\"\r\n    />\r\n      <div>\r\n        <slot />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    Map,\r\n    LatLng,\r\n    LatLngBounds\r\n  } from 'leaflet';\r\n  import bindEvents from './util/bind-events';\r\n\r\n  export default {\r\n    props: [\r\n      'center',\r\n      'zoom',\r\n      'zoomControlPosition',\r\n      'minZoom',\r\n      'maxZoom',\r\n    ],\r\n    mounted() {\r\n      const map = this.$leafletElement = this.createLeafletElement();\r\n\r\n      // move zoom control\r\n      map.zoomControl.setPosition(this.$props.zoomControlPosition);\r\n\r\n      // put in state\r\n      this.$store.commit('setMap', { map });\r\n\r\n      this.setMapView(this.center);\r\n\r\n      this.$nextTick(() => {\r\n        map.attributionControl.setPrefix('<a target=\"_blank\" href=\"//www.phila.gov/it/aboutus/units/Pages/GISServicesGroup.aspx\">City of Philadelphia | CityGeo</a>');\r\n      })\r\n\r\n      // signal children to mount\r\n      for (let child of this.$children) {\r\n        // REVIEW it seems weird to pass children their own props. trying to\r\n        // remember why this was necessary... binding issue?\r\n        child.parentMounted(this, child.$props);\r\n      }\r\n\r\n      // bind events\r\n      // http://leafletjs.com/reference.html#map-click\r\n\r\n      // const MAP_EVENTS = [\r\n      //   'click',\r\n      //   'dblclick',\r\n      //   'mousedown',\r\n      //   'mouseup',\r\n      //   'mouseover',\r\n      //   'mouseout',\r\n      //   'mousemove',\r\n      //   'contextmenu',\r\n      //   'focus',\r\n      //   'blur',\r\n      //   'preclick',\r\n      //   'load',\r\n      //   'unload',\r\n      //   'viewreset',\r\n      //   'movestart',\r\n      //   'move',\r\n      //   'moveend',\r\n      //   'dragstart',\r\n      //   'drag',\r\n      //   'dragend',\r\n      //   'zoomstart',\r\n      //   'zoomend',\r\n      //   'zoomlevelschange',\r\n      //   'resize',\r\n      //   'autopanstart',\r\n      //   'layeradd',\r\n      //   'layerremove',\r\n      //   'baselayerchange',\r\n      //   'overlayadd',\r\n      //   'overlayremove',\r\n      //   'locationfound',\r\n      //   'locationerror',\r\n      //   'popupopen',\r\n      //   'popupclose'\r\n      // ];\r\n\r\n      // TODO warn if trying to bind an event that doesn't exist\r\n      bindEvents(this, this.$leafletElement, this._events);\r\n      if (this.$config.map.clickToIdentifyFeatures) {\r\n        map.on('click', this.identifyFeatures);\r\n      }\r\n    },\r\n    watch: {\r\n      center(nextCenter) {\r\n        this.setMapView(nextCenter);\r\n      },\r\n      zoom(nextZoom) {\r\n        if (!nextZoom) return;\r\n        this.$leafletElement.setZoom(nextZoom);\r\n        this.$store.commit('setMapZoom', nextZoom);\r\n      },\r\n      mapBounds(nextBounds) {\r\n        console.log('watch nextBounds is firing, nextBounds:', nextBounds, 'this.$leafletElement:', this.$leafletElement);\r\n        this.setMapBounds(nextBounds)\r\n      },\r\n      fullScreenMapEnabled() {\r\n        // console.log('Map.vue fullScreenMapEnabled watch is firing');\r\n        this.$leafletElement.invalidateSize();\r\n      },\r\n      webMapDisplayedLayers(nextWebMapDisplayedLayers) {\r\n        let intersectingLayers = [];\r\n        for (let feature of this.intersectingFeatures) {\r\n          intersectingLayers.push(feature.feature.layerName);\r\n        }\r\n        console.log('map.vue watch nextWebMapDisplayedLayers:', nextWebMapDisplayedLayers, 'intersectingLayers:', intersectingLayers);\r\n        for (let layer of intersectingLayers) {\r\n          if (!nextWebMapDisplayedLayers.includes(layer)) {\r\n            this.$store.commit('setIntersectingFeatures', []);\r\n            return;\r\n          }\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      mapContainerClass() {\r\n        if (this.$config.map.containerClass) {\r\n          return this.$config.map.containerClass\r\n        } else {\r\n          return 'map-container'\r\n        }\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      mapBounds() {\r\n        return this.$store.state.map.bounds;\r\n      },\r\n      webMapDisplayedLayers() {\r\n        return this.$store.state.map.webMapDisplayedLayers;\r\n      },\r\n      intersectingFeatures() {\r\n        return this.$store.state.map.intersectingFeatures;\r\n      }\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const { zoomControlPosition, ...options } = this.$props;\r\n        return new Map(this.$refs.map, options);\r\n      },\r\n      childDidMount(child) {\r\n        child.addTo(this.$leafletElement);\r\n      },\r\n      setMapView(xy = [], zoom = this.zoom) {\r\n        if (xy.length === 0) return;\r\n        const [ lng, lat ] = xy;\r\n        const latLng = new LatLng(lat, lng);\r\n\r\n        // we used \"setView\" here because when you refreshed the app with an address in the url,\r\n        // \"panTo\" was getting stepped on by \"setZoom\" and it was not happening\r\n        // this.$nextTick(() => {\r\n        // console.log('Map.vue this.$leafletElement.setView is running, latLng:', latLng);\r\n        this.$leafletElement.setView(latLng, zoom);\r\n        // })\r\n      },\r\n      setMapBounds(bounds) {\r\n        // console.log('setMapBounds is running, bounds:', bounds, bounds.isValid(), 'this.$leafletElement:', this.$leafletElement);\r\n        if (bounds._northEast) {\r\n          // console.log('MAP.VUE SETMAPBOUNDS IS RUNNING:', bounds._northEast.lat, bounds._northEast.lng, bounds._southWest.lat, bounds._southWest.lng);\r\n          // const corner1 = L.latLng(bounds._northEast.lat, bounds._northEast.lng);\r\n          // const corner2 = L.latLng(bounds._southWest.lat, bounds._southWest.lng);\r\n          // const bounds2 = L.latLngBounds(corner2, corner1);\r\n          // console.log('bounds2:', bounds2, bounds2.isValid())\r\n          // this.$leafletElement.fitBounds(bounds);\r\n          const map = this.$leafletElement;\r\n          // console.log('bounds:', bounds, 'this.$leafletElement:', this.$leafletElement, 'map:', map);\r\n          // map.fitBounds(bounds2);\r\n          map.fitBounds([[bounds._northEast.lat, bounds._northEast.lng],[bounds._southWest.lat, bounds._southWest.lng]]);\r\n        }\r\n      },\r\n\r\n      // this is used when the click should identify features\r\n      identifyFeatures(e) {\r\n        const map = this.$leafletElement\r\n        const clickBounds = L.latLngBounds(e.latlng, e.latlng);\r\n        // console.log('clickHandler in Map is starting, e:', e, 'clickBounds:', clickBounds);\r\n        // console.log('map._layers', map._layers);\r\n        let intersectingFeatures = [];\r\n        let geometry;\r\n        for (let layer in map._layers) {\r\n          var overlay = map._layers[layer];\r\n          // console.log('layer:', layer, 'overlay:', overlay);\r\n          if (overlay._layers) {\r\n            for (let oLayer in overlay._layers) {\r\n              const feature = overlay._layers[oLayer];\r\n              // console.log('feature:', feature);\r\n              if (feature.feature) {\r\n                geometry = feature.feature.geometry.type;\r\n                // console.log('clickHandler LAYER:', layer, 'FEATURE:', feature, 'GEOMETRY:', geometry);\r\n                let bounds;\r\n                if (geometry === 'Polygon' || geometry === 'MultiPolygon') {\r\n                  // console.log('polygon or multipolygon');\r\n                  if (feature.contains(e.latlng)) {\r\n                    // console.log('about to run checkForDuplicates')\r\n                    this.checkForDuplicates(layer, feature, intersectingFeatures);\r\n                  }\r\n                }\r\n                else if (geometry === 'LineString') {\r\n                  // console.log('Line');\r\n                  bounds = feature.getBounds();\r\n                  if (bounds && clickBounds.intersects(bounds)) {\r\n                    this.checkForDuplicates(layer, feature, intersectingFeatures);\r\n                  }\r\n                } else if (geometry === 'Point') {\r\n                  // console.log('Point');\r\n                  bounds = L.latLngBounds(feature._latlng, feature._latlng);\r\n                  if (bounds && clickBounds.intersects(bounds)) {\r\n                    this.checkForDuplicates(layer, feature, intersectingFeatures);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.$store.commit('setPopupCoords', e.latlng);\r\n        this.$store.commit('setIntersectingFeatures', intersectingFeatures);\r\n      },\r\n      checkForDuplicates(layer, feature, intersectingFeatures) {\r\n        // console.log('checkForDuplicates is running, layer:', layer, 'feature:', feature);\r\n        let ids = []\r\n        for (let i = 0; i < intersectingFeatures.length; i++) {\r\n          ids[i] = layer + '_' + intersectingFeatures[i].feature.id;\r\n        }\r\n        // console.log('layer:', layer, 'feature.feature.id:', feature.feature.id);\r\n        if (!ids.includes(layer + '_' + feature.feature.id)) {\r\n          // console.log('checkForDuplicates going to push to intersectingFeatures:', layer, feature.feature.id);\r\n          intersectingFeatures.push(feature);\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .map-container {\r\n    height: 100%;\r\n  }\r\n\r\n  .map-container-type2 {\r\n    height: calc(100vh - 109px);\r\n  }\r\n\r\n  .map {\r\n    height: 100%;\r\n  }\r\n\r\n  @media (max-width: 749px) {\r\n    .map-container {\r\n      height: 300px;\r\n    }\r\n  }\r\n\r\n  /* @media screen and (max-width: 40em) { */\r\n  @media screen and (max-width: 750px) {\r\n    .map-container-type2 {\r\n      height: calc(100vh - 141px);\r\n    }\r\n  }\r\n</style>\r\n","<!--\r\nThe way this works is: Vue renders the control in a slot below the map, and\r\nwhen the map is ready we wrap the control in a Leaflet class and add it to the\r\nmap, which also removes it from the Vue slot.\r\n\r\nREVIEW does this break anything with Vue? Because it's expecting a node that\r\nisn't there?\r\n-->\r\n\r\n<template>\r\n  <div>\r\n    <slot />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n\r\n  export default {\r\n    props: ['position'],\r\n    methods: {\r\n      createLeafletElement(L) {\r\n        // console.log('Control.vue createLeafletElement is running')\r\n        // subclass Control to accept an el which gets mounted to the map\r\n        class ControlParent extends L.Control {\r\n          constructor(el, options) {\r\n            super(options);\r\n            this.el = el;\r\n          }\r\n          onAdd() {\r\n            const el = this.el;\r\n\r\n            // keep clicks from hitting the map\r\n            L.DomEvent.disableClickPropagation(el);\r\n            L.DomEvent.disableScrollPropagation(el);\r\n\r\n            return el;\r\n          }\r\n        }\r\n\r\n        const el = this.$el;\r\n        // console.log('Control.vue el:', el);\r\n        return new ControlParent(el, {\r\n          position: this.position\r\n        });\r\n      },\r\n      parentMounted(parent, props) {\r\n        // console.log('Control.vue parentMounted is running, parent:', parent, 'props:', props);\r\n        const leafletElement = this.createLeafletElement(L);\r\n        this.$leafletElement = leafletElement;\r\n        const map = parent.$leafletElement;\r\n        // console.log('Control.vue parentMounted is calling addTo(map)');\r\n        leafletElement.addTo(map);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n","<script>\r\n  import { geoJSON } from 'leaflet';\r\n  import bindEvents from './util/bind-events';\r\n\r\n  // pascal case\r\n  const GeoJson = geoJSON;\r\n\r\n  export default {\r\n    props: [\r\n      'geojson',\r\n      'fillColor',\r\n      'color',\r\n      'weight',\r\n      'opacity',\r\n      'fillOpacity',\r\n      'data'\r\n    ],\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n\r\n      bindEvents(this, this.$leafletElement, this._events);\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const props = this.$props;\r\n        const {\r\n          geojson,\r\n          ...options\r\n        } = props;\r\n\r\n        // console.log('geojson', geojson)\r\n        const newGeojson = new GeoJson(geojson, options);\r\n        //this.$store.commit('setCircleMarkers', newCircleMarker);\r\n        return newGeojson;\r\n        // if the geoJSON feature is a point, it needs to be styled through \"pointToLayer\"\r\n        // const type = this.$props.overlay.type;\r\n        // const style = this.$props.overlay.style;\r\n        // return new GeoJson(this.$props.geojson, {\r\n        //   color: this.$props.color,\r\n        //   weight: this.$props.weight,\r\n        //   // pointToLayer: function (feature, latlng) {\r\n      \t// \t// \treturn type(latlng, style)\r\n        //   // }\r\n        // });\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n</script>\r\n","<script>\r\n  import { CircleMarker }  from 'leaflet';\r\n  import bindEvents from './util/bind-events';\r\n\r\n  export default {\r\n    props: [\r\n      'latlng',\r\n      'radius',\r\n      'fillColor',\r\n      'color',\r\n      'weight',\r\n      'opacity',\r\n      'fillOpacity',\r\n      'data',\r\n      'pane'\r\n    ],\r\n    watch: {\r\n      latlng(nextLatlng) {\r\n        // alert('watch circleMarker props latlng is running nextLatlng:', nextLatlng);\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n        if (map) {\r\n          leafletElement.addTo(map);\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n\r\n      // bind events\r\n      // TODO warn if trying to bind an event that doesn't exist\r\n      bindEvents(this, this.$leafletElement, this._events);\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const props = this.$props;\r\n        const {\r\n          latlng,\r\n          ...options\r\n        } = props;\r\n        const newCircleMarker = new CircleMarker(latlng, options);\r\n        return newCircleMarker;\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n","<script>\r\n  import * as L from 'leaflet';\r\n\r\n  export default {\r\n    props: [\r\n      'vSide',\r\n      'hSide'\r\n    ],\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        map._controlCorners[this.vSide + this.hSide] = L.DomUtil.create('div', 'leaflet-'+this.vSide+' leaflet-'+this.hSide, map._controlContainer);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .leaflet-fullleft {\r\n    position: absolute;\r\n    bottom: 0px; /* possible because the placeholder's parent is the map */\r\n    left: 0px;\r\n    padding-bottom: 10px;\r\n    z-index: 500;\r\n  }\r\n\r\n  .leaflet-fulltop {\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 0px;\r\n    padding-bottom: 10px;\r\n    z-index: 500;\r\n  }\r\n\r\n  .leaflet-centervert {\r\n    /* position: relative; */\r\n    /* top: 100px;\r\n    left: 0px; */\r\n    /* padding-top: 40%; */\r\n    padding-bottom: 30%;\r\n    z-index: 500;\r\n  }\r\n\r\n  .leaflet-almostleft {\r\n    position: absolute;\r\n    bottom: 0px;\r\n    left: 30px;\r\n    padding-bottom: 10px;\r\n    z-index: 500;\r\n  }\r\n\r\n  .leaflet-almostleft .leaflet-control {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .leaflet-almostright {\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 60px;\r\n    padding-bottom: 10px;\r\n    z-index: 500;\r\n  }\r\n\r\n  .leaflet-almostright .leaflet-control {\r\n    margin-top: 10px;\r\n  }\r\n</style>\r\n","<template>\r\n  <div>\r\n    <slot />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n  export default {\r\n    mounted() {\r\n      // console.log('popup mounted is running');\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      // leafletElement.addTo(this._map);\r\n      leafletElement.on('remove', this.removePopup)\r\n    },\r\n    destroyed() {\r\n      // console.log('pop-up destroyed is running')\r\n      this.$leafletElement.removeFrom(this._map);\r\n    },\r\n    watch: {\r\n      intersectingFeatures(nextIntersectingFeatures) {\r\n        // console.log('Popup WATCH intersectingFeatures is firing');\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        // leafletElement.addTo(this._map);\r\n        leafletElement.on('remove', this.removePopup)\r\n      }\r\n    },\r\n    computed: {\r\n      _map() {\r\n        return this.$store.state.map.map;\r\n      },\r\n      intersectingFeatures() {\r\n        return this.$store.state.map.intersectingFeatures;\r\n      },\r\n      popupCoords() {\r\n        return this.$store.state.map.popupCoords;\r\n      }\r\n    },\r\n    methods: {\r\n      removePopup() {\r\n        // console.log('closed Popup, this:', this);\r\n        this.$store.commit('setIntersectingFeatures', []);\r\n      },\r\n      createLeafletElement() {\r\n        const popup = L.popup({\r\n          minWidth: 300,\r\n          offset: L.point(0, -24)\r\n        }).setLatLng(this.popupCoords)\r\n          .setContent(this.$children[0].$el)\r\n          .openOn(this._map);\r\n\r\n        return popup;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n","<template>\r\n  <div>\r\n    <div v-if=\"this.popupHtmlArray.length > 1\"\r\n         class=\"text-center\"\r\n    >\r\n      <ul class=\"pagination text-center\">\r\n        <li :class=\"this.previousIsDisabled\">\r\n          <span v-if=\"this.previousIsDisabled !== 'pagination-previous'\">\r\n            Previous\r\n          </span>\r\n          <a @click=\"changePopup(currentPopup-1)\"\r\n             v-if=\"this.previousIsDisabled === 'pagination-previous'\"\r\n          >\r\n            Previous\r\n          </a>\r\n        </li>\r\n        <div class=\"inline-div\"\r\n             v-if=\"this.popupHtmlArrayLength <= 9\"\r\n        >\r\n          <li v-for=\"(popup, index) in this.popupHtmlArray\"\r\n              :class=\"isCurrent(index)\"\r\n          >\r\n            <span v-if=\"isCurrent(index) === 'current'\">\r\n              {{ index + 1 }}\r\n            </span>\r\n            <a @click=\"changePopup(index)\"\r\n               v-if=\"isCurrent(index) !== 'current'\"\r\n            >\r\n              {{ index + 1 }}\r\n            </a>\r\n          </li>\r\n        </div>\r\n        <div class=\"inline-div popup-div\"\r\n             v-if=\"this.popupHtmlArrayLength >= 10\"\r\n        >\r\n          {{ currentPopup + 1 }} of {{ this.popupHtmlArrayLength }}\r\n        </div>\r\n        <li :class=\"this.nextIsDisabled\">\r\n          <span v-if=\"this.nextIsDisabled !== 'pagination-next'\">\r\n            Next\r\n          </span>\r\n          <a @click=\"changePopup(currentPopup+1)\"\r\n             v-if=\"this.nextIsDisabled === 'pagination-next'\"\r\n          >\r\n            Next\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-html=\"this.popupHtmlArray[this.currentPopup]\">\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        'currentPopup': 0\r\n      }\r\n    },\r\n    mounted() {\r\n      // console.log('POPUPCONTENT MOUNTED')\r\n      this.$store.commit('setSelectedPopupLayer', this.intersectingFeatures[0]);\r\n    },\r\n    destroyed() {\r\n      // console.log('PopupContent destroyed')\r\n      this.$store.commit('setSelectedPopupLayer', null);\r\n    },\r\n    watch: {\r\n      popupHtmlArray(nextPopupHtmlArray) {\r\n        this.currentPopup = 0\r\n        this.$store.commit('setSelectedPopupLayer', this.intersectingFeatures[0]);\r\n      }\r\n    },\r\n    methods: {\r\n      changePopup(index) {\r\n        this.currentPopup = index;\r\n        this.$store.commit('setSelectedPopupLayer', this.intersectingFeatures[index]);\r\n      },\r\n      isCurrent(index) {\r\n        if (index === this.currentPopup) {\r\n          return 'current'\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      previousIsDisabled() {\r\n        if (this.currentPopup === 0) {\r\n          return 'pagination-previous disabled'\r\n        } else {\r\n          return 'pagination-previous'\r\n        }\r\n      },\r\n      nextIsDisabled() {\r\n        if (this.currentPopup === this.popupHtmlArray.length - 1) {\r\n          return 'pagination-next disabled'\r\n        } else {\r\n          return 'pagination-next'\r\n        }\r\n      },\r\n      intersectingFeatures() {\r\n        return this.$store.state.map.intersectingFeatures;\r\n      },\r\n      popupHtmlArray() {\r\n        let htmlArray = [];\r\n        for (let feature in this.$store.state.map.intersectingFeatures) {\r\n          htmlArray.push(this.$store.state.map.intersectingFeatures[feature].feature.popupHtml)\r\n        }\r\n        return htmlArray;\r\n      },\r\n      popupHtmlArrayLength() {\r\n        return this.popupHtmlArray.length;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n\r\n  .leaflet-popup-content {\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .pagination {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .leaflet-popup-close-button {\r\n    font-size: 24px !important;\r\n    height: 24px !important;\r\n    line-height: 24px !important;\r\n    width: 24px !important;\r\n  }\r\n\r\n  .inline-div {\r\n    display: inline-block;\r\n  }\r\n\r\n  .popup-div {\r\n    font-size: 14px;\r\n  }\r\n\r\n</style>\r\n","<script>\r\n  import { Polygon } from 'leaflet';\r\n\r\n  export default {\r\n    props: [\r\n      'latlngs',\r\n      'color',\r\n      'weight',\r\n      'fill',\r\n      'pane'\r\n    ],\r\n    mounted() {\r\n      // console.log('Polygon mounted is firing');\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n      if (map) {\r\n        // console.log('Polygon adding to map, element:', leafletElement);\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    render(h) {\r\n      return;\r\n    },\r\n    watch: {\r\n      latlngs(nextLatLngs) {\r\n        // console.log('polygon latlngs changed');\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n        if (map) {\r\n          // console.log('on update, polygon adding to map, element:', leafletElement);\r\n          leafletElement.addTo(map);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        // console.log('Polygon createLeafletElement is firing', this.$props.latlngs);\r\n        return new Polygon(this.$props.latlngs, {\r\n          color: this.$props.color,\r\n          weight: this.$props.weight,\r\n          fill: this.$props.fill,\r\n          pane: this.$props.pane,\r\n          'z-index': 9999,\r\n        });\r\n      },\r\n      parentMounted(parent) {\r\n        // console.log('Polygon parentMounted is firing, this.$leafletElement:', this.$leafletElement);\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      },\r\n    }\r\n  };\r\n\r\n</script>\r\n","<script>\r\n  import { Polyline } from 'leaflet';\r\n\r\n  export default {\r\n    props: [\r\n      'latlngs',\r\n      'color',\r\n      'weight',\r\n      'pane'\r\n    ],\r\n    mounted() {\r\n      console.log('polyline mounted is firing');\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n      if (map) {\r\n        console.log('polyline adding to map, element:', leafletElement);\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    render(h) {\r\n      return;\r\n    },\r\n    watch: {\r\n      latlngs(nextLatLngs) {\r\n        console.log('polyline latlngs changed');\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n        if (map) {\r\n          console.log('on update, polyline adding to map, element:', leafletElement);\r\n          leafletElement.addTo(map);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        console.log('polyline createLeafletElement is firing, latlngs:', this.$props.latlngs);\r\n        return new Polyline(this.$props.latlngs, {\r\n          color: this.$props.color,\r\n          weight: this.$props.weight,\r\n          pane: this.$props.pane,\r\n          'z-index': 10000,\r\n        });\r\n      },\r\n      parentMounted(parent) {\r\n        console.log('polyline parentMounted is firing, this.$leafletElement:', this.$leafletElement);\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      },\r\n    }\r\n  };\r\n\r\n</script>\r\n","<script>\r\n  import * as L from 'leaflet';\r\n  import { tiledMapLayer as TiledMapLayer } from 'esri-leaflet';\r\n\r\n  export default {\r\n    props: [\r\n      'url',\r\n      'minZoom',\r\n      'maxZoom',\r\n      'zIndex',\r\n      'attribution'\r\n    ],\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n        map.attributionControl.removeAttribution('overwrite');\r\n        map.attributionControl.removeAttribution('<span class=\"esri-attributions\" style=\"line-height:14px; vertical-align: -3px; text-overflow:ellipsis; white-space:nowrap; overflow:hidden; display:inline-block; max-width:1385px;\"></span>');\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const props = Object.assign({}, this.$props);\r\n        const mapLayer = new TiledMapLayer(props);\r\n        return mapLayer;\r\n\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n        map.attributionControl.removeAttribution('overwrite');\r\n        map.attributionControl.removeAttribution('<span class=\"esri-attributions\" style=\"line-height:14px; vertical-align: -3px; text-overflow:ellipsis; white-space:nowrap; overflow:hidden; display:inline-block; max-width:1385px;\"></span>');\r\n      }\r\n    }\r\n  };\r\n</script>\r\n","<!-- <template>\r\n  <div class=\"slider-wrapper\">\r\n    <input class=\"slider\"\r\n           type=\"range\"\r\n           min=\"1\"\r\n           max=\"100\"\r\n           step=\"1\"\r\n           v-model=\"opa\"\r\n    >\r\n  </div>\r\n</template> -->\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n\r\n  // TODO look into a cleaner way of importing from esri-leaflet\r\n  // import Control from '../leaflet/Control';\r\n  //\r\n  // // REVIEW is there a better way to extend a vue component?\r\n  // const {props, methods} = Control;\r\n\r\n  let opacity_layer;\r\n\r\n  export default {\r\n    props: [\r\n      'layer',\r\n      'position',\r\n      'initialOpacity'\r\n    ],\r\n    created() {\r\n      let opacityValue = this.$props.initialOpacity * 100\r\n      // console.log(\"opacityValue\", opacityValue);\r\n\r\n      L.Control.opacitySlider = L.Control.extend({\r\n        options: {\r\n          position: 'topright'\r\n        },\r\n        setOpacityLayer: function (layer) {\r\n          opacity_layer = layer;\r\n        },\r\n        onAdd: function (map) {\r\n          // console.log('on add', this, this.$props);\r\n          var opacity_slider_div = L.DomUtil.create('div', 'opacity_slider_control');\r\n\r\n          $(opacity_slider_div).slider({\r\n            orientation: \"vertical\",\r\n            range: \"min\",\r\n            min: 0,\r\n            max: 100,\r\n            value: opacityValue,\r\n            step: 10,\r\n            start: function ( event, ui) {\r\n              //When moving the slider, disable panning.\r\n              map.dragging.disable();\r\n              map.once('mousedown', function (e) {\r\n                map.dragging.enable();\r\n              });\r\n            },\r\n            slide: function ( event, ui ) {\r\n              var slider_value = ui.value / 100;\r\n              opacity_layer.setOpacity(slider_value);\r\n            }\r\n          });\r\n\r\n          $(opacity_slider_div).click(function(e) {\r\n            e.stopPropagation();\r\n          })\r\n\r\n          return opacity_slider_div;\r\n        }\r\n      });\r\n    },\r\n    mounted() {\r\n\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map;\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        this.$nextTick(() => {\r\n          leafletElement.addTo(map.map);\r\n        });\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeControl(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const OpacitySlider = new L.Control.opacitySlider;\r\n        OpacitySlider.setPosition(this.$props.position);\r\n        OpacitySlider.setOpacityLayer(this.$props.layer);\r\n        return OpacitySlider;\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        map.addControl(this.$leafletElement);\r\n      }\r\n    }\r\n  };\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n.opacity_slider_control .ui-slider-range {\r\n    background-image: none;\r\n    background-color: #646464;\r\n    height: 200px;\r\n}\r\n\r\n</style>\r\n","<!-- REVIEW should this be merged with TiledMapLayer.vue and put the opacity\r\nslider in a slot? -->\r\n\r\n<template>\r\n  <opacity-slider :layer=\"this.$leafletElement\"\r\n                  :position=\"'topleft'\"\r\n                  :initialOpacity=\"opacity\"\r\n  />\r\n  <!-- <div v-if=\"!opacitySlider\"></div> -->\r\n</template>\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n  import { tiledMapLayer as TiledMapLayer } from 'esri-leaflet';\r\n  import OpacitySlider from '../components/OpacitySlider.vue';\r\n\r\n  export default {\r\n    components: {\r\n      OpacitySlider\r\n    },\r\n    props: [\r\n      'url',\r\n      'minZoom',\r\n      'maxZoom',\r\n      'zIndex',\r\n      'attribution',\r\n      'opacity'\r\n    ],\r\n    created() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n        map.attributionControl.removeAttribution('overwrite');\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    // render(h) {\r\n    //   return;\r\n    // },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const props = Object.assign({}, this.$props);\r\n        const mapLayer = new TiledMapLayer(props);\r\n        return mapLayer;\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n","<template>\r\n  <opacity-slider :layer=\"this.$leafletElement\"\r\n                  :position=\"'topleft'\"\r\n                  :initialOpacity=\"opacity\"\r\n  />\r\n</template>\r\n<script>\r\n  import * as L from 'leaflet';\r\n  import { dynamicMapLayer as DynamicMapLayer } from 'esri-leaflet';\r\n  // TODO things in esri-leaflet should be standalone and not depend on\r\n  // vue-leaflet-esri components. pass this in as a prop/plugin rather than importing.\r\n  import OpacitySlider from '../components/OpacitySlider.vue';\r\n\r\n  export default {\r\n    components: {\r\n      OpacitySlider\r\n    },\r\n    props: {\r\n      url: {\r\n\r\n      },\r\n      minZoom: {\r\n\r\n      },\r\n      maxZoom: {\r\n\r\n      },\r\n      zIndex: {\r\n\r\n      },\r\n      opacity: {\r\n        default: 1.0\r\n      },\r\n      layers: {\r\n\r\n      },\r\n      layerDefs: {\r\n\r\n      },\r\n      transparent: {\r\n\r\n      },\r\n    },\r\n    created() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    // render(h) {\r\n    //   return;\r\n    // },\r\n    computed: {\r\n\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const props = Object.assign({}, this.$props);\r\n        return new DynamicMapLayer(props);\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n","<!-- <template>\r\n  <opacity-slider :layer=\"this.$leafletElement\"\r\n                  :position=\"'topleft'\"\r\n  />\r\n</template> -->\r\n<script>\r\n  import * as L from 'leaflet';\r\n  import { featureLayer as FeatureLayer } from 'esri-leaflet';\r\n\r\n  // min and max zooms are not handled by esri leaflet, but are handled by vue\r\n  export default {\r\n    props: [\r\n      'url',\r\n      'minZoom',\r\n      'maxZoom',\r\n      'zIndex',\r\n      'layerName',\r\n      'color',\r\n      'fillColor',\r\n      'fillOpacity',\r\n      'weight',\r\n      'style_',\r\n      'markerType',\r\n      'radius',\r\n      'interactive',\r\n    ],\r\n    created() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      console.log('leafletElement:', leafletElement);\r\n      const map = this.$store.state.map.map;\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const props = Object.assign({}, this.$props);\r\n\r\n        const map = this.$store.state.map.map;\r\n        const layerName = props.layerName\r\n        if (!map.getPane(layerName)) {\r\n          map.createPane(layerName);\r\n        }\r\n\r\n        // remove underscore from style_ prop. `style` is a vue reserved word.\r\n        const { style_ } = props;\r\n        delete props.style_;\r\n        props.style = style_;\r\n\r\n        if (props.markerType === 'circleMarker') {\r\n          let pointToLayer = function (geojson, latlng) {\r\n            return L.circleMarker(latlng, {\r\n              pane: layerName,\r\n              color: props.color,\r\n              fillColor: props.fillColor,\r\n              fillOpacity: props.fillOpacity,\r\n              weight: props.weight,\r\n              radius: props.radius,\r\n              interactive: props.interactive,\r\n            });\r\n          }\r\n          props.pointToLayer = pointToLayer;\r\n        }\r\n\r\n        return new FeatureLayer(props);\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n</style>\r\n","function generateUniqueId() {\r\n  return 'id-' + Math.random().toString(36).substring(7);\r\n}\r\n\r\nexport default generateUniqueId;\r\n","<template>\r\n  <div>\r\n    <slot />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios';\r\n  import generateUniqueId from '../util/unique-id';\r\n  import * as LEsriWebMap from 'L-esri-WebMap'\r\n\r\n  export default {\r\n    computed: {\r\n      webmapId() {\r\n        // console.log('config', this.$config);\r\n        return this.$config.webmapId;\r\n      }\r\n    },\r\n    methods: {\r\n      parentMounted(parent) {\r\n        const self = this;\r\n        const map = this.$store.state.map.map;\r\n\r\n        const esriUrl = \"https://www.arcgis.com/sharing/rest/content/items/\"+ this.webmapId +\"/data\";\r\n        const params = {\r\n          dataType: 'json',\r\n          webmapId: this.webmapId\r\n        }\r\n        let webMapLayersAndRest = []\r\n\r\n        axios.get(esriUrl, { params }).then(response => {\r\n          const restData = response.data;\r\n          let webMap;\r\n          if (this.$config.bundled) {\r\n            webMap = this.$webMap = LEsriWebMap.webMap(this.webmapId, { map: map });\r\n          } else {\r\n            webMap = this.$webMap = L.esri.webMap(this.webmapId, { map: map });\r\n          }\r\n\r\n          // console.log('WEBMAP', webMap, 'restData', restData);\r\n          self.$store.commit('setWebMap', webMap);\r\n\r\n          webMap.on('load', function() {\r\n\r\n            map.attributionControl.setPrefix('<a target=\"_blank\" href=\"//www.phila.gov/it/aboutus/units/Pages/GISServicesGroup.aspx\">City of Philadelphia | CityGeo</a>');\r\n\r\n            const ignore = [\"CityBasemap\", \"CityBasemap_Labels\"];\r\n\r\n            // create layerUrls - object mapping layerName to url\r\n            let layerUrls = {};\r\n            for (let layer of webMap.layers) {\r\n              // console.log('layer.title:', layer.title);\r\n              const title = layer.title\r\n              if (!ignore.includes(title)) {\r\n                if (title.includes('_')) {\r\n                  const curLayer = title.split('_')[1];\r\n                  if (layer.layer.service) {\r\n                    // console.log('good', title, layer.layer.service.options.url.replace('https://', '').replace('http://', '').replace(/\\/$/, \"\").toLowerCase());\r\n                    layerUrls[curLayer]=layer.layer.service.options.url.replace('https://', '').replace('http://', '').replace(/\\/$/, \"\").toLowerCase();\r\n                  } else if (layer.layer._layers){\r\n                    // console.log('bad1, then good', title, layer.layer._layers[Object.keys(layer.layer._layers)[0]].service.options.url.replace('https://', '').replace('http://', '').replace(/\\/$/, \"\").toLowerCase());\r\n                    layerUrls[curLayer]=layer.layer._layers[Object.keys(layer.layer._layers)[0]].service.options.url.replace('https://', '').replace('http://', '').replace(/\\/$/, \"\").toLowerCase();\r\n                  } else {\r\n                    // console.log('still bad', title, layer);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            self.$store.commit('setLayerUrls', layerUrls);\r\n\r\n            // create webMapLayersAndRest\r\n            // let webMapLayersAndRest = []\r\n            const opLayers = restData.operationalLayers\r\n\r\n            // start of for loop\r\n            for (let layer of webMap.layers) {\r\n            // for (let [index, layer] of webMap.layers.splice(1).entries()) {\r\n              if (layer.title === 'CityBasemap') {\r\n                continue;\r\n              }\r\n              let curOpLayer;\r\n              for (let opLayer of opLayers) {\r\n                if (opLayer.title === layer.title) {\r\n                  curOpLayer = opLayer\r\n                }\r\n              }\r\n\r\n              const webmapMetaDataRequestUrl = 'https://www.arcgis.com/sharing/rest/content/items/' + curOpLayer.itemId;\r\n              const id = generateUniqueId();\r\n              let layerObj = {\r\n                'category': layer.title.split('_')[0],\r\n                'title': layer.title.split('_')[1],\r\n                'layer': layer.layer,\r\n                'id': id,\r\n                'serviceItemId': null,\r\n                // 'serviceItemId': curOpLayer.itemId,\r\n                'rest': curOpLayer,\r\n                'opacity': curOpLayer.opacity,\r\n                'type': curOpLayer.layerType,\r\n                'type2': layer.type,\r\n                'legend': null,\r\n                'tags': null,\r\n                'tagsString': null,\r\n              }\r\n\r\n              const params2 = {}\r\n\r\n              if (curOpLayer.itemId){\r\n\r\n                L.esri.request(webmapMetaDataRequestUrl, params2, function (error, response) {\r\n                  if (error) {\r\n                    // console.log('L.esri.request ERROR:', error, 'webmapMetaDataRequestUrl:', webmapMetaDataRequestUrl, 'layerObj:', layerObj);\r\n                    webMapLayersAndRest.push(layerObj);\r\n                    webMapLayersAndRest.sort(function(a, b) {\r\n                      const titleA = a.title.toLowerCase()\r\n                      const titleB=b.title.toLowerCase()\r\n                      if (titleA < titleB) //sort string ascending\r\n                      return -1\r\n                      if (titleA > titleB)\r\n                      return 1\r\n                      return 0 //default return value (no sorting)\r\n                    })\r\n\r\n                  } else {\r\n                    // console.log('WebMap MetaData:', response);\r\n                    const tags = response.tags.map(x => typeof x === 'string' ? x.toLowerCase() : x);\r\n                    const filteredTags =  Array.from(new Set(tags));\r\n                    layerObj.tags = filteredTags;\r\n                    layerObj.tagsString = response.tags.join();\r\n                    webMapLayersAndRest.push(layerObj);\r\n                    webMapLayersAndRest.sort(function(a, b) {\r\n                      const titleA = a.title.toLowerCase()\r\n                      const titleB=b.title.toLowerCase()\r\n                      if (titleA < titleB) //sort string ascending\r\n                      return -1\r\n                      if (titleA > titleB)\r\n                      return 1\r\n                      return 0 //default return value (no sorting)\r\n                    })\r\n                  } // end of if/else error\r\n                }); // end of L.esri.request\r\n\r\n              } else {\r\n                webMapLayersAndRest.push(layerObj);\r\n                webMapLayersAndRest.sort(function(a, b) {\r\n                  const titleA = a.title.toLowerCase()\r\n                  const titleB=b.title.toLowerCase()\r\n                  if (titleA < titleB) //sort string ascending\r\n                  return -1\r\n                  if (titleA > titleB)\r\n                  return 1\r\n                  return 0 //default return value (no sorting)\r\n                })\r\n              } // end of if/else curOpLayer.itemId\r\n\r\n            } // end of for loop\r\n\r\n            // webMapLayersAndRest.sort(function(a, b) {\r\n            //   const titleA = a.title.toLowerCase()\r\n            //   const titleB=b.title.toLowerCase()\r\n            //   if (titleA < titleB) //sort string ascending\r\n            //       return -1\r\n            //   if (titleA > titleB)\r\n            //       return 1\r\n            //   return 0 //default return value (no sorting)\r\n            // })\r\n\r\n            const categories = ['']\r\n            for (let layer of webMapLayersAndRest) {\r\n              if (!categories.includes(layer.category)) {\r\n                categories.push(layer.category);\r\n              }\r\n            }\r\n\r\n            categories.sort(function(a, b) {\r\n              const titleA = a.toLowerCase()\r\n              const titleB=b.toLowerCase()\r\n              if (titleA < titleB) //sort string ascending\r\n                  return -1\r\n              if (titleA > titleB)\r\n                  return 1\r\n              return 0 //default return value (no sorting)\r\n            })\r\n\r\n            self.$store.commit('setWebMapLayersAndRest', webMapLayersAndRest);\r\n            self.$store.commit('setCategories', categories);\r\n            map.createPane('highlightOverlay');\r\n          }) // end of webmap onload\r\n        }, response => {\r\n          console.log('AXIOS ERROR WebMap.vue');\r\n        }) // end of axios\r\n\r\n      }, // end of parentMounted\r\n\r\n    } // end of methods\r\n\r\n  }; // end of export\r\n</script>\r\n","<script>\r\n  export default {\r\n    props: [\r\n      'layer',\r\n      'layerName',\r\n      // minScale, maxScale, and drawingInfo are stored in layerDefinition\r\n      'layerDefinition',\r\n      'opacity',\r\n      'type',\r\n    ],\r\n    data() {\r\n      return {\r\n        'geometryType': null\r\n      }\r\n    },\r\n    watch: {\r\n      opacity(nextOpacity) {\r\n        this.changeOpacity(nextOpacity);\r\n      },\r\n      geometryType(nextGeometryType) {\r\n        // console.log('WATCH GEO TYPE:', nextGeometryType);\r\n        if (nextGeometryType === 'esriGeometryPoint') {\r\n          // console.log('GEOMETRY TYPE IS POINT!');\r\n          if (this.$leafletElement.metadata) {\r\n            this.$leafletElement.on('click', function(e) {\r\n              L.DomEvent.stopPropagation(e);\r\n            })\r\n            this.$leafletElement.on('click', this.clickHandler);\r\n          } else if (this.$leafletElement._layers[Object.keys(this.$leafletElement._layers)[0]].metadata) {\r\n            // console.log('watch leafletelement._layers');\r\n            for (let layer of Object.keys(this.$leafletElement._layers)) {\r\n              // console.log('OBJECT KEYS', Object.keys(this.$leafletElement._layers[layer]._layers));\r\n              for (let innerLayer of Object.keys(this.$leafletElement._layers[layer]._layers)) {\r\n                this.$leafletElement._layers[layer]._layers[innerLayer].options.bubblingMouseEvents = false;\r\n                // console.log('!!!!THIS', this.$leafletElement._layers[layer]._layers[innerLayer]);\r\n              }\r\n              // console.log('layer', layer, this.$leafletElement, 'this.$leafletElement._layers[layer]', this.$leafletElement._layers[layer]);\r\n              this.$leafletElement._layers[layer].on('click', function(e) {\r\n                L.DomEvent.stopPropagation(e);\r\n              })\r\n              this.$leafletElement._layers[layer].on('click', this.clickHandler);// {\r\n              // console.log('e', e, 'this', this, 'layer', layer, 'this._layers', this._layers, 'this._layers[layer]', this._layers[layer]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      scale() {\r\n        return this.$store.state.map.scale;\r\n      },\r\n    },\r\n    created() {\r\n      const leafletElement = this.$leafletElement = this.layer;\r\n      if (this.layer.metadata) {\r\n        this.layer.metadata(function(error, metadata) {\r\n          // console.log('metadata', metadata);\r\n          this.geometryType = metadata.geometryType\r\n        }, this);\r\n      } else if (this.layer._layers[Object.keys(this.layer._layers)[0]].metadata){\r\n        this.layer._layers[Object.keys(this.layer._layers)[0]].metadata(function(error, metadata) {\r\n          // console.log('metadata', metadata);\r\n          this.geometryType = metadata.geometryType\r\n        }, this);\r\n      }\r\n    },\r\n    mounted() {\r\n      // console.log('THE LAYER:', this.$leafletElement, 'THE GEO TYPE:', this.geometryType);\r\n      const map = this.$store.state.map.map;\r\n      if (map) {\r\n        this.$leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      },\r\n      changeOpacity(nextOpacity) {\r\n        // console.log('webMapLayer changeOpacity is running, nextOpacity:', nextOpacity, 'LEAFLET ELEMENT:', this.$leafletElement);\r\n        let element;\r\n        // sometimes you have to dig into the leafletElement to get to the objects being shown\r\n        // one way to know whether you have to do that is whether the leafletElement has a \"legend\" function\r\n        if (!this.$leafletElement.legend) {\r\n          element = this.$leafletElement._layers[Object.keys(this.$leafletElement._layers)[0]];\r\n        } else {\r\n          element = this.$leafletElement;\r\n        }\r\n\r\n        // if it is not a feature layer, you can change the opacity of the entire layer\r\n        if (this.$props.type != 'FL') {\r\n          element.setOpacity(nextOpacity);\r\n        } else {\r\n          element.eachFeature(function(layer){\r\n            // console.log('LAYER', layer);\r\n            if (layer._icon) {\r\n              // console.log('LAYER icon', layer);\r\n              const style = layer._icon.attributes.style.nodeValue;\r\n              const styleSlice = style.slice(0, style.indexOf('; opacity'));\r\n              const styleConcat = styleSlice.concat('; opacity:', nextOpacity, '; fill-opacity:', nextOpacity, ';');\r\n              layer._icon.attributes.style.nodeValue = styleConcat;\r\n            } else if (layer._path) {\r\n              // console.log('LAYER path', layer);\r\n              if (layer.options.fillOpacity === 0) {\r\n                layer.setStyle({\r\n                  opacity: nextOpacity,\r\n                })\r\n              } else if (layer.options.opacity === 0) {\r\n                layer.setStyle({\r\n                  fillOpacity: nextOpacity\r\n                })\r\n              } else {\r\n                layer.setStyle({\r\n                  opacity: nextOpacity,\r\n                  fillOpacity: nextOpacity\r\n                })\r\n              }\r\n            } // end of elseIf layer._path\r\n          }) // end of eachFeature\r\n        } // end of else - it is a FL\r\n      }, // end of changeOpacity\r\n\r\n      // nearly the same function is in Map.vue\r\n      // this one is used when the click is ON a point\r\n      clickHandler(e) {\r\n        const map = this.$store.state.map.map;\r\n        const clickBounds = L.latLngBounds(e.layer._latlng, e.layer._latlng);\r\n        // console.log('clickHandler in WebMapLayer is starting, e:', e, 'e.layer._latlng', e.layer._latlng);\r\n        // console.log('map._layers', map._layers);\r\n        let intersectingFeatures = [];\r\n        let geometry;\r\n        for (let layer in map._layers) {\r\n          const overlay = map._layers[layer];\r\n          if (overlay._layers) {\r\n            // console.log('IF overlay._layers');\r\n            for (let oLayer in overlay._layers) {\r\n              let feature = overlay._layers[oLayer];\r\n              // feature.layerName = this.$props.layerName;\r\n\r\n              if (feature.feature) {\r\n                geometry = feature.feature.geometry.type;\r\n                // console.log('clickHandler LAYER:', layer, 'FEATURE:', feature, 'GEOMETRY:', geometry);\r\n                let bounds;\r\n                if (geometry === 'Polygon' || geometry === 'MultiPolygon') {\r\n                  // console.log('polygon or multipolygon');\r\n                  if (feature.contains(e.latlng)) {\r\n                    this.checkForDuplicates(layer, feature, intersectingFeatures);\r\n                  }\r\n                }\r\n                else if (geometry === 'LineString') {\r\n                  // console.log('Line');\r\n                  bounds = feature.getBounds();\r\n                  if (bounds && clickBounds.intersects(bounds)) {\r\n                    this.checkForDuplicates(layer, feature, intersectingFeatures);\r\n                  }\r\n                } else if (geometry === 'Point') {\r\n                  bounds = L.latLngBounds(feature._latlng, feature._latlng);\r\n                  // console.log('Point, bounds:', bounds, 'clickBounds:', clickBounds);\r\n                  if (bounds && clickBounds.intersects(bounds)) {\r\n                    // console.log('Winner - feature:', feature, 'bounds:', bounds, 'clickBounds:', clickBounds);\r\n                    this.checkForDuplicates(layer, feature, intersectingFeatures);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.$store.commit('setPopupCoords', e.latlng);\r\n        this.$store.commit('setIntersectingFeatures', intersectingFeatures);\r\n      },\r\n      checkForDuplicates(layer, feature, intersectingFeatures) {\r\n        // console.log('checkForDuplicates is running, layer:', layer, 'feature:', feature);\r\n        let ids = []\r\n        for (let i = 0; i < intersectingFeatures.length; i++) {\r\n          ids[i] = layer + '_' + intersectingFeatures[i].feature.id;\r\n        }\r\n        if (!ids.includes(layer + '_' + feature.feature.id)) {\r\n          intersectingFeatures.push(feature);\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n","<template>\r\n  <div :class=\"'pvm-search-control-container ' + this.containerClass\"\r\n       :style=\"this.containerStyle\"\r\n  >\r\n    <form @submit.prevent=\"handleSearchFormSubmit\"\r\n          autocomplete=\"off\"\r\n          id=\"search-form\"\r\n          class=\"pvm-search-control-form\"\r\n    >\r\n      <input :class=\"'pvm-search-control-input ' + this.inputClass\"\r\n             :id=\"inputID\"\r\n             :style=\"this.inputStyle\"\r\n             :placeholder=\"this.$props.placeholder || 'Search the map'\"\r\n             :value=\"this.addressEntered\"\r\n             tabindex=\"0\"\r\n             @keyup=\"didType\"\r\n      />\r\n    </form>\r\n    <button :class=\"'pvm-search-control-button ' + this.buttonClass\"\r\n            v-if=\"this.addressEntered != '' && this.addressEntered != null\"\r\n            @click=\"handleFormX\"\r\n    >\r\n    <!-- v-if=\"this.addressAutocompleteEnabled && this.addressEntered != '' && this.addressEntered != null\" -->\r\n      <font-awesome-icon icon=\"times\" />\r\n    </button>\r\n    <button :class=\"'pvm-search-control-button ' + this.buttonClass\"\r\n            name=\"pvm-search-control-button\"\r\n            tabindex=\"-1\"\r\n            @click=\"this.handleSearchFormSubmit\"\r\n    >\r\n      <font-awesome-icon icon=\"search\" />\r\n    </button>\r\n    <slot name=\"address-candidates-slot\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n  import debounce from 'lodash.debounce';\r\n  import axios from 'axios';\r\n  import generateUniqueId from '../util/unique-id';\r\n\r\n  export default {\r\n    props: [\r\n      'position',\r\n      'widthFromConfig',\r\n      'placeholder',\r\n    ],\r\n    data() {\r\n      const data = {\r\n        containerStyle: {\r\n          'width': '305px',\r\n        },\r\n        inputStyle: {\r\n          'width': '250px',\r\n        },\r\n        inputID: generateUniqueId(),\r\n        addressEntered: null,\r\n      }\r\n      return data;\r\n    },\r\n    created() {\r\n      window.addEventListener('resize', this.handleWindowResize);\r\n      this.handleWindowResize();\r\n    },\r\n    watch: {\r\n      addressEntered(nextValue) {\r\n        this.handleWindowResize();\r\n      }\r\n    },\r\n    computed: {\r\n      map() {\r\n        return this.$store.state.map.map;\r\n      },\r\n      // addressEntered() {\r\n      //   return this.$store.state.addressEntered;\r\n      // },\r\n      inputWidth() {\r\n        // if (this.addressAutocompleteEnabled) {\r\n          if (this.addressEntered === '' || this.addressEntered === null) {\r\n            return this.$props.widthFromConfig - 55;\r\n          } else {\r\n            return this.$props.widthFromConfig - 108;\r\n          }\r\n        // } else {\r\n        //   return this.$props.widthFromConfig - 55;\r\n        // }\r\n      },\r\n      inputClass() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'pvm-input-mobile';\r\n        } else {\r\n          return 'pvm-input-non-mobile';\r\n        }\r\n      },\r\n      containerClass() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'pvm-container-mobile';\r\n        } else {\r\n          return 'pvm-container-non-mobile';\r\n        }\r\n      },\r\n      buttonClass() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'pvm-button-mobile'\r\n        } else {\r\n          return 'pvm-button-non-mobile'\r\n        }\r\n      },\r\n      addressAutocompleteEnabled() {\r\n        // TODO this is temporarily disabled\r\n        if (this.$config.addressInput) {\r\n          if (this.$config.addressInput.autocompleteEnabled === true) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n    },\r\n    methods: {\r\n      createLeafletElement(L) {\r\n        // console.log('AddressInput.vue createLeafletElement is running')\r\n        // subclass Control to accept an el which gets mounted to the map\r\n        class ControlParent extends L.Control {\r\n          constructor(el, options) {\r\n            super(options);\r\n            this.el = el;\r\n          }\r\n          onAdd() {\r\n            const el = this.el;\r\n\r\n            // keep clicks from hitting the map\r\n            L.DomEvent.disableClickPropagation(el);\r\n            L.DomEvent.disableScrollPropagation(el);\r\n\r\n            return el;\r\n          }\r\n        }\r\n\r\n        const el = this.$el;\r\n        return new ControlParent(el, {\r\n          position: this.position\r\n        });\r\n      },\r\n      parentMounted(parent, props) {\r\n        // console.log('AddressInput.vue parentMounted is running, parent:', parent, 'props:', props);\r\n        const leafletElement = this.createLeafletElement(L);\r\n        this.$leafletElement = leafletElement;\r\n        const map = this.map;\r\n        leafletElement.addTo(map);\r\n      },\r\n      didType: debounce(function (e) {\r\n          // console.log('debounce is running');\r\n          const { value } = e.target;\r\n          this.$data.addressEntered = value;\r\n          // this.$store.commit('setAddressEntered', value);\r\n\r\n          if (this.addressAutocompleteEnabled) {\r\n            // console.log('debounce is running, e:', e, 'this:', this);\r\n            if (e.key === \"ArrowDown\") {\r\n              document.getElementById('address-candidate-list-0').focus();\r\n              return;\r\n            }\r\n            // const { value } = e.target;\r\n            this.getCandidates(value);\r\n            // this.$store.commit('setAddressEntered', value);\r\n            if (e.key !== \"Enter\") {\r\n              // console.log('AddressInput.vue didType is running, e.key !== \"Enter\"');\r\n              this.$store.commit('setShouldShowAddressCandidateList', true);\r\n            }\r\n          }\r\n        }, 300\r\n      ),\r\n      getCandidates(address) {\r\n        // console.log('getCandidates is running, address:', address);\r\n        axios.get('https://cqvfg1pm72.execute-api.us-east-1.amazonaws.com/dev/first-api-test/', {\r\n          params: {\r\n            address,\r\n          },\r\n        })\r\n          .then(this.didGetCandidates)\r\n          .catch(this.didGetCandidatesError);\r\n      },\r\n      didGetCandidates(res) {\r\n        const { matches } = res.data;\r\n        // console.log('matches:', matches, 'matches map:', matches.map(x => x.address));\r\n        const matchesArray = matches.map(x => x.address);\r\n        this.$store.commit('setCandidates', matchesArray);\r\n      },\r\n      didGetCandidatesError(err) {\r\n        console.log('error getting candidates', err);\r\n        this.$store.commit('setCandidates', []);\r\n      },\r\n      handleFormX() {\r\n        console.log('handleFormX is running');\r\n        this.$data.addressEntered = '';\r\n        // this.$store.commit('setAddressEntered', '');\r\n        this.$store.commit('setShouldShowAddressCandidateList', false);\r\n        this.$store.commit('setCandidates', []);\r\n      },\r\n      handleSearchFormSubmit() {\r\n        console.log('handleSearchFormSubmit is running');\r\n        let value;\r\n        if (this.addressAutocompleteEnabled){\r\n          value = addressEntered\r\n          // value = this.$store.state.addressEntered;\r\n        } else {\r\n          // if (document.querySelector('#' + inputID)) {\r\n          value = document.querySelector('#' + this.$data.inputID.toString()).value;\r\n          // } else if (document.querySelector('#pvm-search-control-input')) {\r\n          //   value = document.querySelector('#pvm-search-control-input')\r\n          // } else {\r\n          //   return;\r\n          // }\r\n        }\r\n        // console.log('phila-vue-comps AddressInput.vue, handleSearchFormSubmit is running, value:', value);\r\n        this.$controller.handleSearchFormSubmit(value);\r\n        // this.$store.commit('setAddressEntered', value);\r\n      },\r\n      handleWindowResize() {\r\n        const addressEntered = this.addressEntered;\r\n        // console.log('AddressInput.vue handleWindowResize is running', window.innerWidth, 'addressEntered:', addressEntered);\r\n        if (window.innerWidth >= 850) {\r\n          this.containerStyle.width = this.$props.widthFromConfig + 'px';\r\n          if (addressEntered === '' || addressEntered === null) {\r\n            this.inputStyle.width = this.$props.widthFromConfig - 55 + 'px';\r\n          } else {\r\n            this.inputStyle.width = this.$props.widthFromConfig - 108 + 'px';\r\n          }\r\n        } else if (window.innerWidth >= 750) {\r\n          this.containerStyle.width = this.$props.widthFromConfig - 100 + 'px';\r\n          if (addressEntered === '' || addressEntered === null) {\r\n            this.inputStyle.width = this.$props.widthFromConfig - 155 + 'px';\r\n          } else {\r\n            this.inputStyle.width = this.$props.widthFromConfig - 208 + 'px';\r\n          }\r\n        } else {\r\n          this.containerStyle.width = '300px';\r\n          if (addressEntered === '' || addressEntered === null) {\r\n            this.inputStyle.width = '245px';\r\n          } else {\r\n            this.inputStyle.width = '192px';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.pvm-search-control-form {\r\n  display: inline-block;\r\n}\r\n\r\n/* Container */\r\n\r\n.pvm-search-control-container {\r\n  display: inline-block;\r\n  border-radius: 2px;\r\n  box-shadow:0 2px 4px rgba(0,0,0,0.2),0 -1px 0px rgba(0,0,0,0.02);\r\n  width: 305px;\r\n}\r\n\r\n.pvm-container-non-mobile {\r\n  height: 48px;\r\n}\r\n\r\n.pvm-container-mobile {\r\n  height: 38px;\r\n}\r\n\r\n\r\n/* Input */\r\n\r\n.pvm-search-control-input {\r\n  display: inline-block;\r\n  border: 0;\r\n  padding: 15px;\r\n  font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n  font-size: 16px;\r\n  width: 250px;\r\n}\r\n\r\n.pvm-input-non-mobile {\r\n  height: 48px;\r\n}\r\n\r\n.pvm-input-mobile {\r\n  height: 38px;\r\n}\r\n\r\n\r\n/* Button */\r\n\r\n.pvm-search-control-button {\r\n  display: inline-block;\r\n  color: #fff;\r\n  background: #2176d2;\r\n  padding: 0px;\r\n  width: 50px;\r\n}\r\n\r\n.pvm-button-non-mobile {\r\n  height: 48px;\r\n  line-height: 48px;\r\n}\r\n\r\n.pvm-button-mobile {\r\n  height: 38px;\r\n  line-height: 38px;\r\n  padding-top: 1px;\r\n}\r\n\r\n\r\n</style>\r\n","<template>\r\n  <div :class=\"this.listGroupClass\"\r\n       v-show=\"this.shouldShowAddressCandidateList\"\r\n  >\r\n    <ul>\r\n      <li v-for=\"(candidate, i) in candidates\">\r\n        <a :href=\"createLink(candidate)\"\r\n           @click=\"closeAddressCandidateList(candidate)\"\r\n           class=\"list-group-item\"\r\n           tabindex=\"-1\"\r\n           :id=\"'address-candidate-list-' + i\"\r\n           @keydown=\"maybeUsedArrow\"\r\n        >\r\n          {{ candidate }}\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n\r\n  export default {\r\n    props: ['position'],\r\n    computed: {\r\n      map() {\r\n        return this.$store.state.map.map;\r\n      },\r\n      candidates() {\r\n        return this.$store.state.candidates;\r\n      },\r\n      shouldShowAddressCandidateList() {\r\n        return this.$store.state.shouldShowAddressCandidateList;\r\n      },\r\n      activeTopic() {\r\n        return this.$store.state.activeTopic;\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      listGroupClass() {\r\n        if (this.isMobileOrTablet) {\r\n          if (this.addressAutocompleteEnabled) {\r\n            if (this.addressEntered === '' || this.addressEntered === null) {\r\n              return 'list-group-mobile';\r\n            } else {\r\n              return 'list-group-mobile-full';\r\n            }\r\n          } else {\r\n            return 'list-group-mobile';\r\n          }\r\n        } else {\r\n          if (this.addressAutocompleteEnabled) {\r\n            if (this.addressEntered === '' || this.addressEntered === null) {\r\n              return 'list-group';\r\n            } else {\r\n              return 'list-group-full';\r\n            }\r\n          } else {\r\n            return 'list-group';\r\n          }\r\n        }\r\n      },\r\n      addressAutocompleteEnabled() {\r\n        // TODO this is temporarily disabled\r\n        if (this.$config.addressInput) {\r\n          if (this.$config.addressInput.autocompleteEnabled === true) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n    },\r\n    watch: {\r\n      shouldShowAddressCandidateList(nextValue) {\r\n        // console.log('AddressCandidateList.vue watch shouldShowAddressCandidateList is running, nextValue:', nextValue);\r\n        if (nextValue === true) {\r\n          this.createControl();\r\n        }\r\n      },\r\n    },\r\n    methods: {\r\n      createLink(candidate) {\r\n        if (this.$store.state.activeTopic) {\r\n          return '#/' + candidate + '/' + this.activeTopic;\r\n        } else {\r\n          return '#/' + candidate;\r\n        }\r\n      },\r\n      createLeafletElement(L) {\r\n        // console.log('AddressCandidateList.vue createLeafletElement is running')\r\n        // subclass Control to accept an el which gets mounted to the map\r\n        class ControlParent extends L.Control {\r\n          constructor(el, options) {\r\n            super(options);\r\n            this.el = el;\r\n          }\r\n          onAdd() {\r\n            const el = this.el;\r\n\r\n            // keep clicks from hitting the map\r\n            L.DomEvent.disableClickPropagation(el);\r\n            L.DomEvent.disableScrollPropagation(el);\r\n\r\n            return el;\r\n          }\r\n        }\r\n\r\n        const el = this.$el;\r\n        return new ControlParent(el, {\r\n          position: this.position\r\n        });\r\n      },\r\n      createControl() {\r\n        // console.log('AddressCandidateList.vue createControl is running');\r\n        const leafletElement = this.createLeafletElement(L);\r\n        this.$leafletElement = leafletElement;\r\n        const map = this.map;\r\n        leafletElement.addTo(map);\r\n      },\r\n      parentMounted(parent, props) {\r\n        // console.log('AddressCandidateList.vue parentMounted is running, parent:', parent, 'props:', props);\r\n      },\r\n      maybeUsedArrow(e) {\r\n        const id = e.target.id;\r\n        const index = parseInt(id.substring(id.lastIndexOf('-') + 1));\r\n        let indexUp, indexDown;\r\n        if (index < this.candidates.length - 1) {\r\n          indexUp = index + 1;\r\n        } else (\r\n          indexUp = index\r\n        )\r\n        if (index !== 0) {\r\n          indexDown = index - 1;\r\n        } else {\r\n          indexDown = 0\r\n        }\r\n        // console.log('maybeUsedArrow running, e:', e, 'index:', index, 'indexUp:', indexUp, 'indexDown:', indexDown);\r\n        if (e.key === \"ArrowDown\") {\r\n          document.getElementById('address-candidate-list-' + indexUp).focus();\r\n        }\r\n        if (e.key === \"ArrowUp\") {\r\n          document.getElementById('address-candidate-list-' + indexDown).focus();\r\n        }\r\n      },\r\n      closeAddressCandidateList(addressCandidate) {\r\n        // console.log('closeAddressCandidateList, addressCandidate:', addressCandidate);\r\n        // this.$controller.handleSearchFormSubmit(addressCandidate);\r\n        this.$store.commit('setAddressEntered', addressCandidate);\r\n        this.$store.commit('setShouldShowAddressCandidateList', false);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.list-group {\r\n  height: 300px;\r\n  width: 250px;\r\n  overflow: auto;\r\n  margin-top: 1px !important;\r\n}\r\n\r\n.list-group-full {\r\n  height: 300px;\r\n  width: 197px;\r\n  overflow: auto;\r\n  margin-top: 1px !important;\r\n}\r\n\r\n.list-group-mobile {\r\n  height: 300px;\r\n  width: 250px;\r\n  overflow: auto;\r\n  margin-top: 1px !important;\r\n}\r\n\r\n.list-group-mobile-full {\r\n  height: 300px;\r\n  width: 197px;\r\n  overflow: auto;\r\n  margin-top: 1px !important;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  margin-left: 0px;\r\n}\r\n\r\n.list-group-item {\r\n  /* width: 237px; */\r\n  display: block;\r\n  border-radius: 2px;\r\n  box-shadow:0 2px 4px rgba(0,0,0,0.2),0 -1px 0px rgba(0,0,0,0.02);\r\n  border: 2;\r\n  background-color: white;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  padding-left: 10px;\r\n  font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n}\r\n\r\n.list-group-item:hover {\r\n  background-color: #ffefa2;\r\n  font-weight: bold;\r\n}\r\n\r\n/*small*/\r\n@media screen and (max-width: 39.9375em) {\r\n  .list-group {\r\n    width: 200px;\r\n  }\r\n\r\n  .list-group-mobile {\r\n    width: 200px;\r\n  }\r\n\r\n  .list-group-full {\r\n    width: 147px;\r\n  }\r\n\r\n  .list-group-mobile-full {\r\n    width: 158px;\r\n  }\r\n}\r\n\r\n</style>\r\n","<script>\r\n  import { Marker } from 'leaflet';\r\n  import VectorIcon from 'leaflet-vector-icon';\r\n\r\n  export default {\r\n    props: [\r\n      'latlng',\r\n      'markerColor',\r\n      'icon'\r\n    ],\r\n    render(h) {\r\n      const a = this.$props.latlng;\r\n      return;\r\n    },\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    updated() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const icon = new VectorIcon({\r\n          icon:  this.$props.icon || 'circle',\r\n          markerColor: this.$props.markerColor || '#2176d2',\r\n        });\r\n        // const icon = {};\r\n\r\n        return new Marker(this.latlng, { icon });\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n/* .fa-lg {\r\n  vertical-align: -10%;\r\n} */\r\n\r\n</style>\r\n","<!--\r\n  wraps Leaflet.vector-markers as a vue component\r\n  https://github.com/hiasinho/Leaflet.vector-markers\r\n-->\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n\r\n  export default {\r\n    props: [\r\n      'icon',\r\n      'latlng',\r\n      'rotationAngle'\r\n    ],\r\n    render(h) {\r\n      // for some reason, the react prop that `this.orientation` depends on has\r\n      // to be evaluated once in order to receive updates.\r\n      // this.orientation;\r\n\r\n      return;\r\n    },\r\n    mounted() {\r\n      var proto_initIcon = L.Marker.prototype._initIcon;\r\n      var proto_setPos = L.Marker.prototype._setPos;\r\n\r\n      var oldIE = (L.DomUtil.TRANSFORM === 'msTransform');\r\n\r\n      L.Marker.addInitHook(function () {\r\n          var iconOptions = this.options.icon && this.options.icon.options;\r\n          var iconAnchor = iconOptions && this.options.icon.options.iconAnchor;\r\n          if (iconAnchor) {\r\n              iconAnchor = (iconAnchor[0] + 'px ' + iconAnchor[1] + 'px');\r\n          }\r\n          this.options.rotationOrigin = this.options.rotationOrigin || iconAnchor || 'center bottom' ;\r\n          this.options.rotationAngle = this.options.rotationAngle || 0;\r\n\r\n          // Ensure marker keeps rotated during dragging\r\n          this.on('drag', function(e) { e.target._applyRotation(); });\r\n      });\r\n\r\n      L.Marker.include({\r\n          _initIcon: function() {\r\n              proto_initIcon.call(this);\r\n          },\r\n\r\n          _setPos: function (pos) {\r\n              proto_setPos.call(this, pos);\r\n              this._applyRotation();\r\n          },\r\n\r\n          _applyRotation: function () {\r\n              if(this.options.rotationAngle) {\r\n                  this._icon.style[L.DomUtil.TRANSFORM+'Origin'] = this.options.rotationOrigin;\r\n\r\n                  if(oldIE) {\r\n                      // for IE 9, use the 2D rotation\r\n                      this._icon.style[L.DomUtil.TRANSFORM] = 'rotate(' + this.options.rotationAngle + 'deg)';\r\n                  } else {\r\n                      // for modern browsers, prefer the 3D accelerated version\r\n                      this._icon.style[L.DomUtil.TRANSFORM] += ' rotateZ(' + this.options.rotationAngle + 'deg)';\r\n                  }\r\n              }\r\n          },\r\n\r\n          setRotationAngle: function(angle) {\r\n              this.options.rotationAngle = angle;\r\n              this.update();\r\n              return this;\r\n          },\r\n\r\n          setRotationOrigin: function(origin) {\r\n              this.options.rotationOrigin = origin;\r\n              this.update();\r\n              return this;\r\n          }\r\n      });\r\n\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      //console.log('pngMarker destroyed fired, latlng is', this.latlng);\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    watch: {\r\n      rotationAngle(nextRotationAngle) {\r\n        // console.log('pngMarker orientation changed', nextRotationAngle);\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n\r\n        // REVIEW kind of hacky/not reactive?\r\n        if (map) {\r\n          leafletElement.addTo(map);\r\n        }\r\n      },\r\n      latlng(nextLatLng) {\r\n        // console.log('pngMarker orientation changed', nextRotationAngle);\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n\r\n        // REVIEW kind of hacky/not reactive?\r\n        if (map) {\r\n          leafletElement.addTo(map);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        // console.log('pngMarker createLeafletElement is running');\r\n\r\n        const icon = L.icon({\r\n            iconUrl: this.icon,\r\n            iconSize: [26, 16],\r\n            iconAnchor: [11, 8],\r\n          })\r\n\r\n        // console.log('createLeafletElement is running, this.latlng:', this.latlng);\r\n        return L.marker(this.latlng, {\r\n          icon: icon,\r\n          rotationAngle: this.rotationAngle,\r\n        });\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n","<template>\r\n  <div class=\"leaflet-bar easy-button-container leaflet-control\">\r\n    <button @click=\"handleImageryToggleButtonClick\">\r\n      <span class=\"button-state state-unnamed-state unnamed-state-active\">\r\n        <img class=\"button-image\" :src=\"toggleButtonImgSrc\">\r\n      </span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Control from '../leaflet/Control.vue';\r\n\r\n  const {props, methods} = Control;\r\n\r\n  export default {\r\n    props: [\r\n      'position'\r\n    ],\r\n    computed: {\r\n      toggleButtonImgSrc() {\r\n        const shouldShowImagery = this.$store.state.map.shouldShowImagery;\r\n        let src;\r\n        if (shouldShowImagery) {\r\n          src = \"images/basemap_small.png\"\r\n        }\r\n        else {\r\n          src = \"images/imagery_small.png\"\r\n        }\r\n        return src;\r\n      },\r\n    },\r\n    methods: Object.assign(methods, {\r\n      handleImageryToggleButtonClick(e) {\r\n        // document.getElementById('addressSearch').blur();\r\n        const prevShouldShowImagery = this.$store.state.map.shouldShowImagery;\r\n        const nextShouldShowImagery = !prevShouldShowImagery;\r\n        this.$store.commit('setShouldShowImagery', nextShouldShowImagery);\r\n      },\r\n    })\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .button-image {\r\n    vertical-align: top;\r\n  }\r\n</style>\r\n","<template>\r\n  <div v-show=\"shouldShowImagery\">\r\n    <select id=\"year-select\" @change=\"handleImageryChange\">\r\n      <optgroup v-for=\"(imageryTypeDef, imageryType) in imageryTypes\"\r\n                :label=\"imageryTypeDef.label\">\r\n        <option v-for=\"basemap in basemapsForImageryType(imageryType)\"\r\n                :data-key=\"basemap.key\"\r\n        >\r\n          {{ basemap.label }}\r\n        </option>\r\n      </optgroup>\r\n    </select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Control from '../leaflet/Control.vue';\r\n  const {props, methods} = Control;\r\n\r\n  export default {\r\n    props: [\r\n      'position',\r\n    ],\r\n    computed: {\r\n      shouldShowImagery() {\r\n        return this.$store.state.map.shouldShowImagery;\r\n      },\r\n      imageryTypes() {\r\n        return this.$config.map.imageryTypes;\r\n      },\r\n      currentImagery() {\r\n        return this.$store.state.map.imagery;\r\n      },\r\n    },\r\n    watch: {\r\n      currentImagery(nextCurrentImagery) {\r\n        const nextYear = nextCurrentImagery.replace(/\\D/g,'');\r\n        const el = document.getElementById('year-select');\r\n        el.value = nextYear;\r\n      }\r\n    },\r\n    methods: Object.assign(methods, {\r\n      handleImageryChange() {\r\n        const el = document.getElementById('year-select');\r\n        const group = el.options[el.selectedIndex].parentElement.label;\r\n        const year = el.options[el.selectedIndex].value;\r\n        const nextBasemap = group.toLowerCase() + year;\r\n\r\n        this.$store.commit('setImagery', nextBasemap);\r\n      },\r\n      // returns keys of basemaps of a certain type (e.g. historic, imagery)\r\n      basemapsForImageryType(targetType) {\r\n        const basemapConfig = this.$config.map.basemaps;\r\n        const basemapKeys = Object.keys(basemapConfig);\r\n        const basemaps = [];\r\n\r\n        for (let basemapKey of basemapKeys) {\r\n          const basemapDef = basemapConfig[basemapKey];\r\n          const basemapType = basemapDef.type;\r\n\r\n          if (basemapType === targetType) {\r\n            const basemapLabel = basemapDef.label;\r\n            basemaps.push({\r\n              type: basemapType,\r\n              label: basemapLabel\r\n            })\r\n          }\r\n        }\r\n        return basemaps;\r\n      }\r\n    })\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div id=\"toggle-tab\"\r\n       class=\"toggle-tab\"\r\n       :style=\"{ top: buttonPosition }\"\r\n       @click=\"handleFullScreenMapToggleButtonClick\"\r\n       v-if=\"!this.isMobileOrTablet\"\r\n  >\r\n    <span class=\"align-span\">\r\n      <font-awesome-icon :icon=\"this.currentIcon\" class=\"fa-2x\" />\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        'divHeight': 0,\r\n        'buttonPosition': 0,\r\n      }\r\n    },\r\n    mounted() {\r\n      window.addEventListener('resize', this.setDivHeight);\r\n      this.setDivHeight();\r\n    },\r\n    computed: {\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        return this.$store.state.fullScreenTopicsEnabled;\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active;\r\n      },\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active;\r\n      },\r\n      picOrCycloActive() {\r\n        if (this.cyclomediaActive || this.pictometryActive) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      currentIcon() {\r\n        if (this.fullScreenMapEnabled) {\r\n          return 'caret-right'\r\n        } else {\r\n          return 'caret-left'\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      picOrCycloActive(value) {\r\n        // console.log('FullScreenMapToggleTab watch picOrCycloActive, value:', value);\r\n        this.setDivHeight();\r\n        // this.$nextTick(() => {\r\n        //   this.$store.state.map.map.invalidateSize();\r\n        // })\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        this.setDivHeight();\r\n      }\r\n    },\r\n    methods: {\r\n      setDivHeight() {\r\n        // console.log('FullScreenMapToggleTab setDivHeight is running');\r\n        const el = document.getElementById('map-tag');\r\n        const divStyle = window.getComputedStyle(el);\r\n        const divHeight = parseFloat(divStyle.getPropertyValue('height').replace('px', ''));\r\n        this.buttonPosition = (divHeight-48)/2 + 'px';\r\n      },\r\n      handleFullScreenMapToggleButtonClick(e) {\r\n        const prevFullScreenMapEnabled = this.$store.state.fullScreenMapEnabled;\r\n        const nextFullScreenMapEnabled = !prevFullScreenMapEnabled;\r\n        this.$store.commit('setFullScreenMapEnabled', nextFullScreenMapEnabled);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  /* .toggle-tab {\r\n    position: absolute;\r\n    left: 0px;\r\n    border-width: 1.3px;\r\n    border-color: #CAC9C9;\r\n    height: 48px;\r\n    line-height: 58px;\r\n    width:24px;\r\n    background-color: white;\r\n    display: inline-block;\r\n    z-index: 500; */\r\n    /* border-left-style: solid; */\r\n    /* box-shadow: 2px 2px 7px grey; */\r\n  /* } */\r\n\r\n  .toggle-tab {\r\n    display: none;\r\n  }\r\n\r\n  .align-span {\r\n    margin-left: 6px;\r\n  }\r\n\r\n  @media screen and (min-width: 46.875em) {\r\n    .toggle-tab {\r\n      position: absolute;\r\n      left: 0px;\r\n      border-width: 1.3px;\r\n      border-style: solid;\r\n      border-color: #CAC9C9;\r\n      height: 48px;\r\n      line-height: 56px;\r\n      width:24px;\r\n      background-color: white;\r\n      display: inline-block;\r\n      z-index: 500;\r\n      opacity: 0.7;\r\n      /* border-left-style: solid; */\r\n      /* box-shadow: 2px 2px 7px grey; */\r\n    }\r\n  }\r\n\r\n</style>\r\n","<template>\r\n  <div id=\"toggle-tab\"\r\n       class=\"toggle-tab\"\r\n       :style=\"{ left: buttonPosition }\"\r\n       @click=\"handleFullScreenMapToggleButtonClick\"\r\n       v-if=\"!this.isMobileOrTablet\"\r\n  >\r\n    <span class=\"align-span\">\r\n      <font-awesome-icon :icon=\"this.currentIcon\" class=\"fa-2x\" />\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        'divWidth': 0,\r\n        'buttonPosition': 0,\r\n      }\r\n    },\r\n    mounted() {\r\n      window.addEventListener('resize', this.setDivWidth);\r\n      this.setDivWidth();\r\n    },\r\n    computed: {\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        return this.$store.state.fullScreenTopicsEnabled;\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active;\r\n      },\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active;\r\n      },\r\n      picOrCycloActive() {\r\n        if (this.cyclomediaActive || this.pictometryActive) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      currentIcon() {\r\n        if (this.fullScreenMapEnabled) {\r\n          return 'caret-up'\r\n        } else {\r\n          return 'caret-down'\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      fullScreenTopicsEnabled() {\r\n        this.setDivWidth();\r\n      }\r\n    },\r\n    methods: {\r\n      setDivWidth() {\r\n        const el = document.getElementById('map-tag');\r\n        const divStyle = window.getComputedStyle(el);\r\n        const divWidth = parseFloat(divStyle.getPropertyValue('width').replace('px', ''));\r\n        this.buttonPosition = (divWidth-48)/2 + 'px';\r\n      },\r\n      handleFullScreenMapToggleButtonClick(e) {\r\n        const prevFullScreenMapEnabled = this.$store.state.fullScreenMapEnabled;\r\n        const nextFullScreenMapEnabled = !prevFullScreenMapEnabled;\r\n        this.$store.commit('setFullScreenMapEnabled', nextFullScreenMapEnabled);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .toggle-tab {\r\n    display: none;\r\n  }\r\n\r\n  .align-span {\r\n    margin-left: 14px;\r\n  }\r\n\r\n  @media screen and (min-width: 46.875em) {\r\n    .toggle-tab {\r\n      position: absolute;\r\n      bottom: 0px;\r\n      border-width: 1.3px;\r\n      border-style: solid;\r\n      border-color: #CAC9C9;\r\n      height: 24px;\r\n      line-height: 16px;\r\n      width:48px;\r\n      background-color: white;\r\n      display: inline-block;\r\n      z-index: 500;\r\n      opacity: 0.7;\r\n      /* border-left-style: solid; */\r\n      /* box-shadow: 2px 2px 7px grey; */\r\n    }\r\n  }\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"leaflet-bar easy-button-container leaflet-control\">\r\n    <button @click=\"handleLocationButtonClick\">\r\n      <span class=\"button-state state-unnamed-state unnamed-state-active\">\r\n        <font-awesome-icon :icon=\"['far', 'dot-circle']\" class=\"fa-lg\" />\r\n      </span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Control from '../leaflet/Control.vue';\r\n  const {props, methods} = Control;\r\n\r\n  export default {\r\n    props: [\r\n      'position'\r\n    ],\r\n    data() {\r\n      return {\r\n        locationOn: false\r\n      }\r\n    },\r\n    mounted() {\r\n      console.log('location control mounted')\r\n    },\r\n    methods: Object.assign(methods, {\r\n\r\n      handleLocationButtonClick(e) {\r\n        // document.getElementById('addressSearch').blur()\r\n        // alert('handleLocationButtonClick is running');\r\n        const watchPositionOn = this.$store.state.map.watchPositionOn;\r\n        // console.log('watchPositionOn', watchPositionOn);\r\n        if (!watchPositionOn) {\r\n          this.$store.commit('setWatchPositionOn', true);\r\n          navigator.geolocation.watchPosition(this.geofindSuccess, this.geofindError, {enableHighAccuracy: true, timeout: 1000, maximumAge: 0, distanceFilter: 5});\r\n        } else {\r\n          this.moveToPosition();\r\n        }\r\n      },\r\n      geofindSuccess(position) {\r\n        // alert('geofindSuccess is running, position:', position);\r\n        const payload = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        }\r\n        this.$store.commit('setLocation', payload);\r\n        // console.log('latitude', payload.lat, 'longitude', payload.lng);\r\n        if (!this.locationOn) {\r\n          this.moveToPosition();\r\n          this.locationOn = true;\r\n        }\r\n      },\r\n      moveToPosition() {\r\n        const map = this.$store.state.map.map;\r\n        const location = this.$store.state.map.location;\r\n        // console.log('LocationControl.vue moveToPosition is running, location:', location);\r\n        map.setView([location.lat, location.lng], 19);\r\n      },\r\n      geofindError() {\r\n        console.log('GeofindError')\r\n      }\r\n    })\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<script>\r\n  import MeasureControl from 'leaflet-measure';\r\n  // import 'leaflet-measure/dist/leaflet-measure.css';\r\n\r\n  export default {\r\n    props: ['position'],\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeControl(this.$leafletElement);\r\n    },\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const { position } = this.$props;\r\n\r\n        return new MeasureControl({\r\n  \t\t\t\tposition,\r\n  \t\t\t\tprimaryLengthUnit: 'feet',\r\n  \t\t\t\tprimaryAreaUnit: 'sqfeet',\r\n  \t\t\t});\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        map.addControl(this.$leafletElement);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n","<template>\r\n  <div v-show=\"this.shouldShowLegend\">\r\n    <div class='legend'>\r\n      <ul class='legend-list'>\r\n        <li v-for='key in this.keys'\r\n            class='legend-listitem'\r\n            :style='\"font-size:\"+items[key][\"font-size\"]+\";\"'\r\n        >\r\n          <div class='legend-box'\r\n             :style='\"background-color:\"+items[key][\"background-color\"]+\r\n             \"; border-color:\"+items[key][\"border-color\"]+\r\n             \"; border-style:\"+items[key][\"border-style\"]+\r\n             \"; border-width:\"+items[key][\"border-weight\"]+\r\n             \"; width:\"+items[key].width+\r\n             \"; height:\"+items[key].height+\";\"'\r\n          />\r\n          <div class='list-text'>\r\n            {{key}}\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Control from '../leaflet/Control.vue';\r\n  const {props, methods} = Control;\r\n\r\n  export default {\r\n    props: [\r\n      'position',\r\n      'options',\r\n      'items'\r\n    ],\r\n    computed: {\r\n      keys() {\r\n        return Object.keys(this.$props.items);\r\n      },\r\n      activeTopic() {\r\n        return this.$store.state.activeTopic;\r\n      },\r\n      shouldShowImagery() {\r\n        return this.$store.state.map.shouldShowImagery;\r\n      },\r\n      shouldShowLegend() {\r\n        let result = true;\r\n        if (!this.$props.options.topics.includes(this.activeTopic)) {\r\n          result = false;\r\n        }\r\n        if (this.$props.options.showWithBaseMapOnly) {\r\n          if (this.shouldShowImagery) {\r\n            result = false;\r\n          }\r\n        }\r\n        return result;\r\n      }\r\n      // style() {\r\n      //   // const string = \"background: \" + this.$props.items[key].background + \" color: \" + this.$props.items[key].color\r\n      //   const string = this.$props.items[]\r\n      //   console.log('style string', string);\r\n      //   return string\r\n      // }\r\n    },\r\n    methods: Object.assign(methods)\r\n  };\r\n</script>\r\n\r\n<style>\r\n.legend {\r\n  display: inline-block;\r\n  padding: 6px 8px;\r\n  font: 14px/16px Arial, Helvetica, sans-serif;\r\n  background: white;\r\n  background: rgba(255,255,255,1);\r\n  box-shadow: 0 0 15px rgba(0,0,0,0.2);\r\n  border-radius: 5px;\r\n  line-height: 18px;\r\n  color: #555;\r\n}\r\n\r\n.legend-box {\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  opacity: 1;\r\n  vertical-align: middle;\r\n  margin-right: 4px;\r\n}\r\n\r\n.list-text {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n.legend-list {\r\n  list-style: none;\r\n  padding-top: 2px;\r\n  padding-left: 2px;\r\n  margin-left: 0px;\r\n  /*override standards*/\r\n  margin-bottom: 0;\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <div :class=\"this.basemap === 'none' ? 'basetooltip': 'basetooltip2'\"\r\n         v-on:mouseover=\"onMouseover\"\r\n         v-on:mouseout=\"onMouseout\"\r\n    >\r\n      <div v-if=\"this.basemap === 'pwd'\">\r\n        The property boundaries displayed on the map are for reference only and may not be used in place of recorded deeds or land surveys. Boundaries are generalized for ease of visualization. Source: Philadelphia Water\r\n      </div>\r\n      <div v-else-if=\"this.basemap === 'dor'\">\r\n        The property boundaries displayed on the map are for reference only and may not be used in place of recorded deeds or land surveys. Dimension lengths are calculated using the GIS feature. Source: Department of Records.\r\n      </div>\r\n      <div v-else>\r\n        i\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Control from '../leaflet/Control.vue';\r\n  const {props, methods} = Control;\r\n\r\n  export default {\r\n    props: [\r\n      'position',\r\n    ],\r\n    data() {\r\n      return {\r\n        'basemap': 'none'\r\n      }\r\n    },\r\n    computed: {\r\n      activeBasemap() {\r\n        return this.$store.state.map.basemap;\r\n      },\r\n      activeTopic() {\r\n        return this.$store.state.activeTopic;\r\n      }\r\n    },\r\n    methods: Object.assign(methods, {\r\n      onMouseover() {\r\n        const stateBasemap = this.activeBasemap;\r\n        let finalBasemap = stateBasemap;\r\n        if (stateBasemap.includes('imagery') || stateBasemap.includes('historic')) {\r\n          if (this.activeTopic === 'deeds' || this.activeTopic === 'zoning') {\r\n            finalBasemap = 'dor'\r\n          } else {\r\n            finalBasemap = 'pwd'\r\n          }\r\n        }\r\n        this.basemap = finalBasemap;\r\n      },\r\n      onMouseout() {\r\n        this.basemap = 'none';\r\n      }\r\n    })\r\n  };\r\n</script>\r\n\r\n<style>\r\n.basetooltip {\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 5px 13px;\r\n  font: 20px/22px Arial, Helvetica, sans-serif;\r\n  background: white;\r\n  background: rgba(255,255,255,1);\r\n  box-shadow: 0 0 15px rgba(0,0,0,0.2);\r\n  border-radius: 5px;\r\n}\r\n\r\n.basetooltip2 {\r\n  float: right;\r\n  width: 80%;\r\n  height: 32px;\r\n  padding: 3px 10px;\r\n  padding-right: 40px;\r\n  font: 12px/14px Arial, Helvetica, sans-serif;\r\n  background: white;\r\n  background: rgba(255,255,255,1);\r\n  box-shadow: 0 0 15px rgba(0,0,0,0.2);\r\n  border-radius: 5px;\r\n}\r\n\r\n.basetooltip a {\r\n  color: black\r\n}\r\n\r\n.basetooltip2 a {\r\n  color: black\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <!-- <section :class=\"['openmaps-about' ,'openmaps-modal', {'openmaps-modal--open': modals.about.open}]\" -->\r\n  <section :class=\"['openmaps-about' ,'openmaps-modal']\"\r\n           v-show=\"modals.open === 'help'\">\r\n    <div @click=\"closeModal\" class=\"openmaps-modal-close\">\r\n      <span class=\"button-state state-unnamed-state unnamed-state-active\">\r\n        <font-awesome-icon icon=\"times\" class=\"fa-lg\" aria-hidden=\"true\" />\r\n      </span>\r\n    </div>\r\n    <h2 class=\"text-center \"><b>How to use OpenMaps</b></h2>\r\n    <div class=\"openmaps-modal-content\">\r\n      <!-- <p>Turn on a layer</p> -->\r\n      <div class=\"tour-tip\" @mouseover=\"highlight('.openmaps-category-card')\" @mouseleave=\"removeHighlight('.openmaps-category-card')\">\r\n        <div class=\"icon-div\">\r\n          <span>\r\n            <font-awesome-icon icon=\"filter\" class=\"fa-3x\" aria-hidden=\"true\" />\r\n          </span>\r\n        </div>\r\n        <div class=\"text-div\">\r\n          <p class=\"tour-tip__action\"><b>Filter the list of layers available in the left panel.</b></p>\r\n          <p class=\"tour-tip__result text-nopad\">Type in the box for the first filter to filter by text.  Select a category from the second filter to filter by category.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tour-tip\" @mouseover=\"highlight('.label-text')\" @mouseleave=\"removeHighlight('.label-text')\">\r\n        <div class=\"icon-div\">\r\n          <span>\r\n            <font-awesome-icon icon=\"check-square\" class=\"fa-3x\" aria-hidden=\"true\" />\r\n          </span>\r\n        </div>\r\n        <div class=\"text-div\">\r\n          <p class=\"tour-tip__action\"><b>Toggle on and off map layers by clicking on the checkboxes in the layer panel.</b></p>\r\n          <p class=\"tour-tip__result text-nopad\">You can toggle on as many layers as you want, and they will all show on the map.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tour-tip\" @mouseover=\"highlight('.label-text')\" @mouseleave=\"removeHighlight('.label-text')\">\r\n        <div class=\"icon-div\">\r\n          <span>\r\n            <font-awesome-icon :icon=\"['fal', 'square']\" class=\"fa-3x\" aria-hidden=\"true\" />\r\n          </span>\r\n        </div>\r\n        <div class=\"text-div\">\r\n          <p class=\"tour-tip__action\"><b>If a checkbox is grayed out, zoom in further on the map and it will become active.</b></p>\r\n          <p class=\"tour-tip__result text-nopad\">Many of the layers will not show when the map is zoomed out too far.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tour-tip\" @mouseover=\"highlight('.label-text')\" @mouseleave=\"removeHighlight('.label-text')\">\r\n        <div class=\"icon-div\">\r\n          <span>\r\n            <font-awesome-icon icon=\"map-marker-alt\" class=\"fa-3x\" aria-hidden=\"true\" />\r\n          </span>\r\n        </div>\r\n        <div class=\"text-div\">\r\n          <p class=\"tour-tip__action\"><b>Click on any feature that appears on the map to get a popup with that feature's info.</b></p>\r\n          <p class=\"tour-tip__result text-nopad\">If you have turned on overlapping layers, you will be able to click through multiple popups of info.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tour-tip\" @mouseover=\"highlight('.openmaps-category-card')\" @mouseleave=\"removeHighlight('.openmaps-category-card')\">\r\n        <div class=\"icon-div\">\r\n          <span>\r\n            <font-awesome-icon icon=\"search\" class=\"fa-3x\" aria-hidden=\"true\" />\r\n          </span>\r\n        </div>\r\n        <div class=\"text-div\">\r\n          <p class=\"tour-tip__action\"><b>Search for an address or intersection.</b></p>\r\n        <p class=\"tour-tip__result text-nopad\">The map will move to the location that you have searched</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tour-tip\" @mouseover=\"highlight('.openmaps-category-card')\" @mouseleave=\"removeHighlight('.openmaps-category-card')\">\r\n        <div class=\"icon-div\">\r\n          <span>\r\n            <img class=\"street-view-image\" :src=\"'images/cyclomedia_blue.png'\">\r\n          </span>\r\n        </div>\r\n        <div class=\"text-div\">\r\n          <p class=\"tour-tip__action\"><b>Toggle on and off street view</b></p>\r\n        <p class=\"tour-tip__result text-nopad\">Half of the map panel will be taken up by the street view. If you are zoomed in far enough, circles will appear along the streets in the map.  Click on a circle to change the street view location to that point.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tour-tip\" @mouseover=\"highlight('.openmaps-category-card')\" @mouseleave=\"removeHighlight('.openmaps-category-card')\">\r\n        <div class=\"icon-div\">\r\n          <span>\r\n            <font-awesome-icon icon=\"info-circle\" class=\"fa-3x\" aria-hidden=\"true\" />\r\n          </span>\r\n        </div>\r\n        <div class=\"text-div\">\r\n          <p class=\"tour-tip__action\"><b>Learn more about and download data.</b></p>\r\n        <p class=\"tour-tip__result text-nopad\">Click this icon to be linked to the metadata page for any dataset.</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n// import {mapState} from 'vuex'\r\n// import FontAwesomeIcon from '@fortawesome/vue-fontawesome'\r\n/**\r\n * HOW TO USE THE FINDER MODAL\r\n *\r\n * Hightlights certain elements of the interface on keyword hover.\r\n *\r\n * @since 0.6.22\r\n */\r\nexport default {\r\n\r\n  name: 'Modal-About',\r\n  // components: {FontAwesomeIcon},\r\n  computed: {\r\n    // route() {\r\n    //   return this.$store.state.route;\r\n    // },\r\n    shouldBeOpen() {\r\n      if (this.route === 'help') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    modals() {\r\n      return this.$store.state.modals;\r\n    }\r\n    // ...mapState(['modals'])\r\n  },\r\n  methods: {\r\n    closeModal () {\r\n      const firstLoc = window.location.hash;\r\n      let firstLocArr = firstLoc.split('/').slice(1);\r\n      console.log('firstLocArr:', firstLocArr);\r\n      const helpPos = firstLocArr.indexOf('help');\r\n      firstLocArr = firstLocArr.slice(helpPos+1, helpPos+2);\r\n      console.log('firstLocArr:', firstLocArr);\r\n      let lastHash = '#';\r\n      for (let hashPart of firstLocArr) {\r\n        lastHash = lastHash + '/' + hashPart;\r\n      }\r\n      window.location.hash = lastHash;\r\n      // this.$store.commit('setDidToggleModal', { name: 'help', open: false });\r\n    },\r\n    highlight (selector) {\r\n      let el = document.querySelectorAll(selector)[0]\r\n      // el.classList.add('tour-highlight')\r\n    },\r\n    removeHighlight (selector) {\r\n      let el = document.querySelectorAll(selector)[0]\r\n      // el.classList.remove('tour-highlight')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* <style lang=\"scss\" scoped> */\r\n\r\n.icon-div {\r\n  margin: 10px;\r\n}\r\n\r\n.text-div {\r\n\r\n}\r\n\r\n.street-view-image {\r\n  height: 40px;\r\n  width: 73px;\r\n  color: blue;\r\n}\r\n\r\n.openmaps-modal {\r\n  color: rgb(15, 77, 144);\r\n  width: 97%;\r\n  height: 80%;\r\n  padding: 20px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 70px;\r\n  left: 10px;\r\n  background: white;\r\n  z-index:1000;\r\n  opacity: 0.85;\r\n}\r\n\r\n/* .modal-content {\r\n  overflow-y: auto;\r\n} */\r\n\r\n.openmaps-modal.openmaps-modal--open{\r\n  z-index:1000;\r\n  /* border-left: 3px solid color(ghost-gray); */\r\n  opacity: 1;\r\n}\r\n\r\n.openmaps-modal-content{\r\n  width: 95%;\r\n  height: 85%;\r\n  margin: 20px auto;\r\n  overflow-y: auto;\r\n}\r\n\r\n.openmaps-modal-close{\r\n  position: absolute;\r\n  top:15px;\r\n  left:15px;\r\n  background: white;\r\n  height: 30px;\r\n  width: 30px;\r\n}\r\n\r\n\r\n/* @include breakpoint(medium down) {\r\n  .openmaps-modal{\r\n    position:fixed;\r\n    width: 100%;\r\n    height:calc(100vh - #{$header-height-mobile});\r\n    left:0;\r\n    top: $header-height-mobile;\r\n    background: $white;\r\n    padding:10%;\r\n  }\r\n  .openmaps-modal-content{\r\n    width: 100%;\r\n  }\r\n  .openmaps-modal-close{\r\n    position: absolute;\r\n    top:15px;\r\n    left:15px;\r\n  }\r\n} */\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"leaflet-bar easy-button-container leaflet-control\">\r\n    <button :class=\"this.cyclomediaActive\"\r\n            class=\"cyclomedia-button\"\r\n            @click.prevent=\"handleButtonClick\"\r\n    >\r\n      <span class=\"button-state\">\r\n        <img class=\"button-image\" :src=\"imgSrc\">\r\n      </span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Control from '../leaflet/Control.vue';\r\n  import CyclomediaRecordingsClient from './recordings-client';\r\n\r\n  export default {\r\n    extends: Control,\r\n    // TODO figure how to extend props. sometimes it's an obj, sometimes an array.\r\n    // props: Object.assign(props, {\r\n    // }),\r\n    props: [\r\n      'link',\r\n      'imgSrc'\r\n    ],\r\n    created() {\r\n      // create cyclomedia recordings client\r\n      this.$cyclomediaRecordingsClient = new CyclomediaRecordingsClient(\r\n        this.$config.cyclomedia.recordingsUrl,\r\n        this.$config.cyclomedia.username,\r\n        this.$config.cyclomedia.password,\r\n        4326\r\n      );\r\n    },\r\n    computed: {\r\n      cyclomediaInitialized() {\r\n        return this.$store.state.cyclomedia.initialized;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active ? 'active' : 'inactive'\r\n      }\r\n    },\r\n    methods: {\r\n      handleButtonClick(e) {\r\n        if (!this.cyclomediaInitialized) {\r\n          this.$store.commit('setCyclomediaInitialized', true);\r\n        }\r\n        const willBeActive = !this.$store.state.cyclomedia.active;\r\n\r\n        this.$store.commit('setCyclomediaActive', willBeActive);\r\n\r\n        // if the cyclo viewer is off screen when it loads imagery, it won't\r\n        // show anything even once it's on screen. use this to trigger an\r\n        // update.\r\n\r\n        // const viewer = this.$store.state.cyclomedia.viewer;\r\n        //\r\n        // if (willBeActive && viewer) {\r\n        //   this.$nextTick(() => {\r\n        //     viewer.forceUpdate();\r\n        //   });\r\n        // }\r\n\r\n        // this.$emit('click');\r\n      },\r\n      // setNewLocation(latlng) {\r\n      //   const viewer = this.$store.state.cyclomedia.viewer;\r\n      //   const xy = [latlng.lng, latlng.lat];\r\n      //   viewer.openByCoordinate(xy);\r\n      // },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .inactive {\r\n    background-color: #ffffff;\r\n  }\r\n  .inactive:hover {\r\n    background-color: #ffffff;\r\n  }\r\n  .active {\r\n    background-color: rgb(243, 198, 19);\r\n  }\r\n  .active:hover {\r\n    background-color: rgb(243, 198, 19);\r\n  }\r\n\r\n</style>\r\n","<script>\r\n  import { Circle }  from 'leaflet';\r\n  import bindEvents from './util/bind-events';\r\n\r\n  export default {\r\n    props: [\r\n      'latlng',\r\n      'size',\r\n      'color',\r\n      'weight'\r\n    ],\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      const map = this.$store.state.map.map;\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n\r\n      // bind events\r\n\r\n      // const CIRCLE_EVENTS = [\r\n      //   'click',\r\n      //   'dblclick',\r\n      //   'mousedown',\r\n      //   'mouseover',\r\n      //   'mouseout',\r\n      //   'contextmenu'\r\n      // ];\r\n\r\n      // TODO warn if trying to bind an event that doesn't exist\r\n      bindEvents(this, this.$leafletElement, this._events);\r\n    },\r\n    destroyed() {\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    // we don't actually render anything, but need to define either a template\r\n    // or a render function\r\n    render(h) {\r\n      return;\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        return new Circle(this.latlng, this.size, {\r\n          color: this.color,\r\n          weight: this.weight\r\n        });\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n","<script>\r\n  import Circle from '../leaflet/Circle.vue';\r\n\r\n  export default {\r\n    mixins: [Circle],\r\n    props: ['imageId']\r\n  };\r\n</script>\r\n","// Based on:\r\n// https://github.com/iatkin/leaflet-svgicon\r\n// modified to support es6 imports\r\n\r\nimport * as L from 'leaflet';\r\n\r\nconst SvgIcon = L.DivIcon.extend({\r\n    options: {\r\n        \"circleText\": \"\",\r\n        \"className\": \"svg-icon\",\r\n        \"circleAnchor\": null, //defaults to [iconSize.x/2, iconSize.x/2]\r\n        \"circleColor\": null, //defaults to color\r\n        \"circleOpacity\": null, // defaults to opacity\r\n        \"circleFillColor\": \"rgb(255,255,255)\",\r\n        \"circleFillOpacity\": null, //default to opacity\r\n        \"circleRatio\": 0.5,\r\n        \"circleWeight\": null, //defaults to weight\r\n        \"color\": \"rgb(0,102,255)\",\r\n        \"fillColor\": null, // defaults to color\r\n        \"fillOpacity\": 0.4,\r\n        \"fontColor\": \"rgb(0, 0, 0)\",\r\n        \"fontOpacity\": \"1\",\r\n        \"fontSize\": null, // defaults to iconSize.x/4\r\n        \"iconAnchor\": null, //defaults to [iconSize.x/2, iconSize.y] (point tip)\r\n        \"iconSize\": L.point(32,48),\r\n        \"opacity\": 1,\r\n        \"popupAnchor\": null,\r\n        \"weight\": 2\r\n    },\r\n    initialize: function(options) {\r\n        options = L.Util.setOptions(this, options)\r\n\r\n        if (!options.circleAnchor) {\r\n            options.circleAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.x)/2)\r\n        }\r\n        if (!options.circleColor) {\r\n            options.circleColor = options.color\r\n        }\r\n        if (!options.circleFillOpacity) {\r\n            options.circleFillOpacity = options.opacity\r\n        }\r\n        if (!options.circleOpacity) {\r\n            options.circleOpacity = options.opacity\r\n        }\r\n        if (!options.circleWeight) {\r\n            options.circleWeight = options.weight\r\n        }\r\n        if (!options.fillColor) {\r\n            options.fillColor = options.color\r\n        }\r\n        if (!options.fontSize) {\r\n            options.fontSize = Number(options.iconSize.x/4)\r\n        }\r\n        if (!options.iconAnchor) {\r\n            options.iconAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.y))\r\n        }\r\n        if (!options.popupAnchor) {\r\n            options.popupAnchor = L.point(0, (-0.75)*(options.iconSize.y))\r\n        }\r\n\r\n        var path = this._createPath()\r\n        var circle = this._createCircle()\r\n\r\n        options.html = this._createSVG()\r\n    },\r\n    _createCircle: function() {\r\n        var cx = Number(this.options.circleAnchor.x)\r\n        var cy = Number(this.options.circleAnchor.y)\r\n        var radius = this.options.iconSize.x/2 * Number(this.options.circleRatio)\r\n        var fill = this.options.circleFillColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.circleFillOpacity + \")\")\r\n        var stroke = this.options.circleColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.circleOpacity + \")\")\r\n        var strokeWidth = this.options.circleWeight\r\n        var className = this.options.className + \"-circle\"\r\n\r\n        var circle = '<circle class=\"' + className + '\" cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" fill=\"' + fill + '\" stroke=\"' + stroke + '\" stroke-width=\"' + strokeWidth + '\"/>'\r\n\r\n        return circle\r\n    },\r\n    _createPathDescription: function() {\r\n        var height = Number(this.options.iconSize.y)\r\n        var width = Number(this.options.iconSize.x)\r\n        var weight = Number(this.options.weight)\r\n        var margin = weight / 2\r\n\r\n        var startPoint = \"M \" + margin + \" \" + (width/2) + \" \"\r\n        var leftLine = \"L \" + (width/2) + \" \" + (height - weight) + \" \"\r\n        var rightLine = \"L \" + (width - margin) + \" \" + (width/2) + \" \"\r\n        var arc = \"A \" + (width/4) + \" \" + (width/4) + \" 0 0 0 \" + margin + \" \" + (width/2) + \" Z\"\r\n\r\n        var d = startPoint + leftLine + rightLine + arc\r\n\r\n        return d\r\n    },\r\n    _createPath: function() {\r\n        var pathDescription = this._createPathDescription()\r\n        var strokeWidth = this.options.weight\r\n        var stroke = this.options.color.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.opacity + \")\")\r\n        var fill = this.options.fillColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.fillOpacity + \")\")\r\n        var className = this.options.className + \"-path\"\r\n\r\n        var path = '<path class=\"' + className + '\" d=\"' + pathDescription + '\" stroke-width=\"' + strokeWidth + '\" stroke=\"' + stroke + '\" fill=\"' + fill + '\"/>'\r\n\r\n        return path\r\n    },\r\n    _createSVG: function() {\r\n        var path = this._createPath()\r\n        var circle = this._createCircle()\r\n        var text = this._createText()\r\n        var className = this.options.className + \"-svg\"\r\n\r\n        var style = \"width:\" + this.options.iconSize.x + \"; height:\" + this.options.iconSize.y + \";\"\r\n\r\n        var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"' + className + '\" style=\"' + style + '\">' + path + circle + text + '</svg>'\r\n\r\n        return svg\r\n    },\r\n    _createText: function() {\r\n        var fontSize = this.options.fontSize + \"px\"\r\n        var lineHeight = Number(this.options.fontSize)\r\n\r\n        var x = Number(this.options.iconSize.x) / 2\r\n        var y = x + (lineHeight * 0.35) //35% was found experimentally\r\n        var circleText = this.options.circleText\r\n        var textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.fontOpacity + \")\")\r\n\r\n        var text = '<text text-anchor=\"middle\" x=\"' + x + '\" y=\"' + y + '\" style=\"font-size: ' + fontSize + '\" fill=\"' + textColor + '\">' + circleText + '</text>'\r\n\r\n        return text\r\n    }\r\n})\r\n\r\nexport default SvgIcon;\r\n\r\n// L.divIcon.svgIcon = function(options) {\r\n//     return new L.DivIcon.SVGIcon(options)\r\n// }\r\n\r\n// L.Marker.SVGMarker = L.Marker.extend({\r\n//     options: {\r\n//         \"iconFactory\": L.divIcon.svgIcon,\r\n//         \"iconOptions\": {}\r\n//     },\r\n//     initialize: function(latlng, options) {\r\n//         options = L.Util.setOptions(this, options)\r\n//         options.icon = options.iconFactory(options.iconOptions)\r\n//         this._latlng = latlng\r\n//     },\r\n//     onAdd: function(map) {\r\n//         L.Marker.prototype.onAdd.call(this, map)\r\n//     },\r\n//     setStyle: function(style) {\r\n//         if (this._icon) {\r\n//             var svg = this._icon.children[0]\r\n//             var iconBody = this._icon.children[0].children[0]\r\n//             var iconCircle = this._icon.children[0].children[1]\r\n//\r\n//             if (style.color && !style.iconOptions) {\r\n//                 var stroke = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.opacity+\")\")\r\n//                 var fill = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.fillOpacity+\")\")\r\n//                 iconBody.setAttribute(\"stroke\", stroke)\r\n//                 iconBody.setAttribute(\"fill\", fill)\r\n//                 iconCircle.setAttribute(\"stroke\", stroke)\r\n//\r\n//                 this.options.icon.fillColor = fill\r\n//                 this.options.icon.color = stroke\r\n//                 this.options.icon.circleColor = stroke\r\n//             }\r\n//             if (style.opacity) {\r\n//                 this.setOpacity(style.opacity)\r\n//             }\r\n//             if (style.iconOptions) {\r\n//                 if (style.color) { style.iconOptions.color = style.color }\r\n//                 iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions)\r\n//                 this.setIcon(L.divIcon.svgIcon(iconOptions))\r\n//             }\r\n//         }\r\n//     }\r\n// })\r\n//\r\n// L.marker.svgMarker = function(latlng, options) {\r\n//     return new L.Marker.SVGMarker(latlng, options)\r\n// }\r\n","// L.DivIcon.SVGIcon.noCircleIcon = L.DivIcon.SVGIcon.extend({\r\n//     initialize: function(options) {\r\n//         options = L.Util.setOptions(this, options)\r\n//         options.circleAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.y)/2)\r\n//         options.circleRatio = 0;\r\n//         L.DivIcon.SVGIcon.prototype.initialize.call(this, options)\r\n//\r\n//         return options\r\n//     },\r\n// })\r\n\r\n// L.divIcon.svgIcon.noCircleIcon = function(options) {\r\n//     return new L.DivIcon.SVGIcon.NoCircleIcon(options)\r\n// }\r\n\r\n// L.Marker.SVGMarker.NoCircleMarker = L.Marker.SVGMarker.extend({\r\n//     options: {\r\n//         \"iconFactory\": L.divIcon.svgIcon.NoCircleIcon\r\n//     }\r\n// })\r\n//\r\n// L.marker.svgMarker.noCircleMarker = function(latlng, options) {\r\n//     return new L.Marker.SVGMarker.noCircleMarker(latlng, options)\r\n// }\r\n\r\nimport * as L from 'leaflet';\r\nimport SvgIcon from './svg-icon';\r\n\r\nconst TriangleIcon = SvgIcon.extend({\r\n  initialize: function(options) {\r\n    options = L.Util.setOptions(this, options);\r\n    const circleAnchor = L.point(Number(options.iconSize.x) / 2,\r\n                                 Number(options.iconSize.y) / 2);\r\n    options.circleAnchor = circleAnchor;\r\n    options.circleRatio = 0;\r\n    options.className = options.className + \"-noClick\";\r\n    SvgIcon.prototype.initialize.call(this, options);\r\n\r\n    return options;\r\n  },\r\n\r\n  _createPathDescription: function () {\r\n    const height = Number(this.options.iconSize.y);\r\n    const width = Number(this.options.iconSize.x);\r\n    const weight = Number(this.options.weight);\r\n    const margin = weight;\r\n\r\n    const startPoint = \"M \" + margin + \" \" + (0) + \" \";\r\n    const leftLine = \"L \" + (width / 2) + \" \" + (height - margin) + \" \";\r\n    const rightLine = \"L \" + (width - margin) + \" \" + (0) + \" Z\";\r\n    const d = startPoint + leftLine + rightLine;\r\n\r\n    return d;\r\n  }\r\n})\r\n\r\nexport default TriangleIcon;\r\n\r\n// L.divIcon.svgIcon.triangleIcon = function(options) {\r\n//     return new L.DivIcon.SVGIcon.TriangleIcon(options)\r\n// }\r\n\r\n// L.Marker.SVGMarker.TriangleMarker = L.Marker.SVGMarker.extend({\r\n//     options: {\r\n//         \"iconFactory\": L.divIcon.svgIcon.triangleIcon\r\n//     }\r\n// })\r\n//\r\n// L.marker.svgMarker.triangleMarker = function(latlng, options) {\r\n//     return new L.Marker.SVGMarker.TriangleMarker(latlng, options)\r\n// }\r\n","<!--\r\n  wraps leaflet svg-icons as a vue component\r\n  https://github.com/iatkin/leaflet-svgicon\r\n-->\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n  // import DivIcon from 'leaflet';\r\n  import TriangleIcon from '../util/triangle-icon';\r\n\r\n  export default {\r\n    props: [\r\n      'latlng',\r\n      'rotationAngle',\r\n      'hFov'\r\n    ],\r\n    render(h) {\r\n      // this.orientation;\r\n      return;\r\n    },\r\n    mounted() {\r\n      const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n      // console.log('WHO IT IS', leafletElement);\r\n      const map = this.$store.state.map.map;\r\n\r\n      // REVIEW kind of hacky/not reactive?\r\n      if (map) {\r\n        leafletElement.addTo(map);\r\n      }\r\n    },\r\n    destroyed() {\r\n      // console.log('svgMarker destroyed fired, latlng is', this.latlng);\r\n      this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n    },\r\n    watch: {\r\n      rotationAngle(nextRotationAngle) {\r\n        // console.log('pngMarker orientation changed', nextRotationAngle);\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n\r\n        // REVIEW kind of hacky/not reactive?\r\n        if (map) {\r\n          leafletElement.addTo(map);\r\n        }\r\n      },\r\n      latlng(nextLatLng) {\r\n        // console.log('pngMarker orientation changed', nextRotationAngle);\r\n        this.$leafletElement._map.removeLayer(this.$leafletElement);\r\n        const leafletElement = this.$leafletElement = this.createLeafletElement();\r\n        const map = this.$store.state.map.map;\r\n\r\n        // REVIEW kind of hacky/not reactive?\r\n        if (map) {\r\n          leafletElement.addTo(map);\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      coneCoords() {\r\n        const hFovDegrees = this.hFov * (180/3.14159265359);\r\n        const scale = 50//options.scale;\r\n        const angle = hFovDegrees / 2.0;\r\n        const width = Math.sin(angle * Math.PI / 180);\r\n        const length = Math.sqrt(1.0 - width * width);\r\n        const coneCoords = [width * scale, length * scale];\r\n\r\n        return coneCoords;\r\n      },\r\n    },\r\n    methods: {\r\n      createLeafletElement() {\r\n        const coneCoords = this.coneCoords;\r\n        const icon = new TriangleIcon({\r\n          iconSize: L.point(this.coneCoords[0], this.coneCoords[1]),\r\n          iconAnchor: [this.coneCoords[0] / 2, this.coneCoords[1]],\r\n        });\r\n        return L.marker(this.latlng, {\r\n          icon: icon,\r\n          rotationAngle: this.rotationAngle,\r\n        });\r\n      },\r\n      parentMounted(parent) {\r\n        const map = parent.$leafletElement;\r\n        this.$leafletElement.addTo(map);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .svg-icon-noClick-svg {\r\n    pointer-events: none;\r\n  }\r\n\r\n  .svg-icon-noClick {\r\n    pointer-events: none;\r\n  }\r\n</style>\r\n","<template>\r\n  <div id=\"cyclo-container\"\r\n       :class=\"this.cycloContainerClass\"\r\n  >\r\n  <!-- v-once -->\r\n    <div id=\"inCycloDiv\"\r\n         @click=\"this.popoutClicked\"\r\n         :style=\"{ right: popoutPosition }\"\r\n         v-if=\"this.isMobileOrTablet === false && this.popoutAble === true\"\r\n    >\r\n      <font-awesome-icon icon=\"external-link\" class=\"popout-icon\" />\r\n    </div>\r\n    <div id=\"cycloviewer\"\r\n         ref=\"cycloviewer\"\r\n         class=\"panoramaViewerWindow\"\r\n    >\r\n    <!-- @mousedown=\"console.log('mouseup')\" -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import proj4 from 'proj4';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        'docWidth': 0,\r\n        'divWidth': 0,\r\n        'popoutPosition': 0,\r\n      }\r\n    },\r\n    props: ['screenPercent'],\r\n    computed: {\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      popoutAble() {\r\n        let answer;\r\n        if (this.$config.cyclomedia.popoutAble === false) {\r\n          answer = false\r\n        } else {\r\n          answer = true\r\n        }\r\n        return answer\r\n      },\r\n      cyclomediaInitialized() {\r\n        return this.$store.state.cyclomedia.initialized;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active;\r\n      },\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active;\r\n      },\r\n      cycloContainerClass() {\r\n        if (this.pictometryActive) {\r\n          return 'medium-16 large-16 columns mb-panel'\r\n        } else {\r\n          return 'medium-24 large-24 columns mb-panel'\r\n        }\r\n      },\r\n      locForCyclo() {\r\n        // console.log('computing locForCyclo');\r\n        const geocodeData = this.$store.state.geocode.data;\r\n        const map = this.$store.state.map.map;\r\n        if (geocodeData) {\r\n          return [geocodeData.geometry.coordinates[1], geocodeData.geometry.coordinates[0]];\r\n        }\r\n      },\r\n      latLngFromMap() {\r\n        return this.$store.state.cyclomedia.latLngFromMap;\r\n      },\r\n      mapCenter() {\r\n        return this.$store.state.map.center;\r\n      },\r\n      navBarOpen() {\r\n        return this.$store.state.cyclomedia.navBarOpen;\r\n      },\r\n      projection4326() {\r\n        return \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\r\n      },\r\n      projection2272() {\r\n        return \"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs\";\r\n      },\r\n      // surfaceCursorOn() {\r\n      //   return this.$store.state.cyclomedia.surfaceCursorOn;\r\n      // }\r\n    },\r\n    watch: {\r\n      fullScreenMapEnabled() {\r\n        this.setDivWidth();\r\n      },\r\n      locForCyclo(newCoords) {\r\n        // console.log('watch locForCyclo is firing, setNewLocation running with newCoords:', newCoords);\r\n        if (newCoords) {\r\n          this.setNewLocation(newCoords);\r\n        }\r\n      },\r\n      latLngFromMap(newCoords) {\r\n        // console.log('watch latLngFromMap is firing, setNewLocation running with newCoords:', newCoords);\r\n        if (this.cyclomediaInitialized) {\r\n\r\n          if (Array.isArray(newCoords)) {\r\n            // console.log('it is an array');\r\n            this.setNewLocation([newCoords[1], newCoords[0]]);\r\n          } else {\r\n            // console.log('it is not an array');\r\n            this.setNewLocation([newCoords.lat, newCoords.lng]);\r\n          }\r\n        }\r\n      },\r\n      // docWidthComp() {\r\n      //   console.log('docWidth changed');\r\n      // }\r\n      cyclomediaInitialized() {\r\n        StreetSmartApi.init({\r\n          targetElement: this.$refs.cycloviewer,\r\n          username: this.$config.cyclomedia.username,\r\n          password: this.$config.cyclomedia.password,\r\n          apiKey: this.$config.cyclomedia.apiKey,\r\n          // srs: 'EPSG:4326',\r\n          srs: 'EPSG:2272',\r\n          locale: 'en-us',\r\n          addressSettings: {\r\n            locale: 'en-us',\r\n            database: 'CMDatabase'\r\n          }\r\n        }).then (\r\n          () => {\r\n            // get map center and set location\r\n            const latLngFromMap = this.$store.state.cyclomedia.latLngFromMap;\r\n            this.setNewLocation([latLngFromMap[0], latLngFromMap[1]]);\r\n          },\r\n          err => {\r\n            // console.log('Api: init: failed. Error: ', err);\r\n          }\r\n        );\r\n        window.addEventListener('resize', this.setDivWidth);\r\n      },\r\n      cyclomediaActive(newActiveStatus) {\r\n        this.setDivWidth();\r\n        if (newActiveStatus === true) {\r\n          this.setNewLocation(this.latLngFromMap);\r\n        }\r\n      },\r\n      // pictometryActive() {\r\n      //   this.setDivWidth();\r\n      // }\r\n    },\r\n    updated() {\r\n      // console.log('cyclomedia updated running');\r\n      // TODO find a better way to get the image to update and not be stretched\r\n      // const viewer = this.$store.state.cyclomedia.viewer;\r\n      if (this.cyclomediaActive) {\r\n        if (window.panoramaViewer) {\r\n          window.panoramaViewer.rotateRight(0.0000001);\r\n        }\r\n      }\r\n      this.setDivWidth();\r\n    },\r\n    methods: {\r\n      setDivWidth() {\r\n        const docWidth = document.body.clientWidth;\r\n        this.docWidth = docWidth;\r\n        const el = document.getElementById('cyclo-container');\r\n        const divStyle = window.getComputedStyle(el);\r\n        const divWidth = parseFloat(divStyle.getPropertyValue('width').replace('px', ''));\r\n        this.divWidth = divWidth;\r\n        // console.log('setDivWidth is running, docWidth:', docWidth, 'divWidth', divWidth);\r\n        let answer;\r\n        if (this.fullScreenMapEnabled) {\r\n          answer = docWidth - divWidth + 'px';\r\n        } else {\r\n          answer = docWidth - (docWidth/this.$props.screenPercent + divWidth) + 'px';\r\n        }\r\n        // console.log('setDivWidth, answer:', answer);\r\n        this.popoutPosition = answer;\r\n        // return width;\r\n      },\r\n      setNewLocation(coords) {\r\n        // console.log('cyclomedia setNewLocation is running using', coords);\r\n        const viewerType = StreetSmartApi.ViewerType.PANORAMA;\r\n        const coords2272 = proj4(this.projection4326, this.projection2272, [coords[1], coords[0]]);\r\n        // StreetSmartApi.open(center.lng + ',' + center.lat, {\r\n        // StreetSmartApi.open(coords[1] + ',' + coords[0], {\r\n        StreetSmartApi.open(coords2272[0] + ',' + coords2272[1], {\r\n          viewerType: viewerType,\r\n          srs: 'EPSG:2272',\r\n          // srs: 'EPSG:4326',\r\n          panoramaViewer: {\r\n            closable: false,\r\n            maximizable: false,\r\n          }\r\n        }).then (\r\n          function(result) {\r\n            // console.log('StreetSmartApi2, result:', result);\r\n            const widget = this;\r\n            // console.log('Created component through API:', result);\r\n            if (result) {\r\n              for (let i =0; i < result.length; i++) {\r\n                if(result[i].getType() === StreetSmartApi.ViewerType.PANORAMA) window.panoramaViewer = result[i];\r\n              }\r\n              widget.sendOrientationToStore();\r\n\r\n              // StreetSmartApi.removeOverlay()\r\n              window.panoramaViewer.toggleNavbarExpanded(widget.navBarOpen);\r\n              // if (widget.isMobileOrTablet) {\r\n              // console.log('about to remove surfaceCursorLayer');\r\n              // StreetSmartApi.removeOverlay('surfaceCursorLayer');\r\n              // console.log('removed surfaceCursorLayer');\r\n              // }\r\n\r\n              // StreetSmartApi.removeOverlay('measurementLayer');\r\n              // window.panoramaViewer.toggleButtonEnabled('panorama.measure', false);\r\n              window.panoramaViewer.toggleButtonEnabled('panorama.elevation', false);\r\n              window.panoramaViewer.toggleButtonEnabled('panorama.reportBlurring', false);\r\n\r\n              for (let overlay of window.panoramaViewer.props.overlays) {\r\n                // console.log('overlay:', overlay);\r\n                if (overlay.id === 'surfaceCursorLayer') {\r\n                  if (overlay.visible === true) {\r\n                    window.panoramaViewer.toggleOverlay(overlay);\r\n                    // overlay.visible = false;\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (!this.$config.cyclomedia.measurementAllowed || this.$config.cyclomedia.measurementAllowed === 'false') {\r\n                StreetSmartApi.removeOverlay('measurementLayer');\r\n                window.panoramaViewer.toggleButtonEnabled('panorama.measure', false);\r\n              }\r\n\r\n              window.panoramaViewer.on('VIEW_CHANGE', function() {\r\n                if (window.panoramaViewer.props.orientation.yaw !== widget.$store.state.cyclomedia.orientation.yaw ||\r\n                    window.panoramaViewer.props.orientation.xyz !== widget.$store.state.cyclomedia.orientation.xyz\r\n                ) {\r\n                  // console.log('on VIEW_CHANGE fired with yaw change', window.panoramaViewer.props.orientation);\r\n                  widget.sendOrientationToStore();\r\n                } else if (window.panoramaViewer.getNavbarExpanded() !== this.navBarOpen) {\r\n                  widget.$store.commit('setCyclomediaNavBarOpen', window.panoramaViewer.getNavbarExpanded());\r\n                }\r\n              })\r\n\r\n              window.panoramaViewer.on('VIEW_LOAD_END', function() {\r\n                if (window.panoramaViewer.props.orientation.yaw !== widget.$store.state.cyclomedia.orientation.yaw ||\r\n                    window.panoramaViewer.props.orientation.xyz !== widget.$store.state.cyclomedia.orientation.xyz\r\n                ) {\r\n                  // console.log('on VIEW_CHANGE fired with yaw change', window.panoramaViewer.props.orientation);\r\n                  widget.sendOrientationToStore();\r\n                } else if (window.panoramaViewer.getNavbarExpanded() !== this.navBarOpen) {\r\n                  widget.$store.commit('setCyclomediaNavBarOpen', window.panoramaViewer.getNavbarExpanded());\r\n                }\r\n              })\r\n            }\r\n          }.bind(this)\r\n        ).catch(\r\n          function(reason) {\r\n            // console.log('Failed to create component(s) through API: ' + reason);\r\n          }\r\n        );\r\n\r\n        // const viewer = this.$store.state.cyclomedia.viewer;\r\n        // viewer.openByCoordinate(coords);\r\n      },\r\n      sendOrientationToStore() {\r\n        // console.log('sendOrientationToStore, yaw:', window.panoramaViewer.props.orientation.yaw);\r\n        this.$store.commit('setCyclomediaYaw', window.panoramaViewer.props.orientation.yaw)\r\n        this.$store.commit('setCyclomediaHFov', window.panoramaViewer.props.orientation.hFov)\r\n        const xy = [window.panoramaViewer.props.orientation.xyz[0], window.panoramaViewer.props.orientation.xyz[1]];\r\n        const lnglat = proj4(this.projection2272, this.projection4326, xy);\r\n        // console.log('xy:', xy, 'lnglat', lnglat);\r\n        this.$store.commit('setCyclomediaXyz', lnglat);\r\n      },\r\n      popoutClicked() {\r\n        const map = this.$store.state.map.map;\r\n        const center = map.getCenter();\r\n        window.open('//cyclomedia.phila.gov/?' + center.lat + '&' + center.lng, '_blank');\r\n        this.$store.commit('setCyclomediaActive', false);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n\r\n#cyclo-container {\r\n  padding: 0px;\r\n  height: 50%;\r\n  display: none;\r\n}\r\n\r\n@media screen and (min-width: 46.875em) {\r\n  #cyclo-container {\r\n    display: block;\r\n  }\r\n}\r\n\r\n#inCycloDiv {\r\n  /* position: absolute; */\r\n  position: absolute;\r\n  /* top: 0px; */\r\n  right: 0px;\r\n  /* float: right; */\r\n  background-color: white;\r\n  border: 0px solid;\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor:pointer;\r\n  z-index: 10;\r\n}\r\n\r\n.popout-icon {\r\n  margin-top: 8.5px;\r\n  font-size: 15px;\r\n  margin-left: 8.5px;\r\n}\r\n\r\n.panoramaViewerWindow {\r\n  display: block;\r\n  width: 100%;\r\n  height:100%;\r\n}\r\n\r\n@media screen and (max-width: 46.875em) {\r\n  .cyclo-container {\r\n    display: none;\r\n  }\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <!-- <div class=\"leaflet-bar easy-button-container leaflet-control\"> -->\r\n  <div class=\"leaflet-bar easy-button-container leaflet-control\">\r\n    <button :class=\"this.pictometryActive\"\r\n            @click.prevent=\"handleButtonClick\"\r\n    >\r\n      <span class=\"button-state\">\r\n        <img class=\"button-image\" :src=\"imgSrc\">\r\n      </span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Control from '../leaflet/Control.vue';\r\n\r\n  export default {\r\n    extends: Control,\r\n    // TODO figure how to extend props. sometimes it's an obj, sometimes an array.\r\n    // props: Object.assign(props, {\r\n    // }),\r\n    props: [\r\n      'link',\r\n      'imgSrc'\r\n    ],\r\n    computed: {\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active ? 'active' : 'inactive'\r\n      }\r\n    },\r\n    methods: {\r\n      handleButtonClick(e) {\r\n        this.$store.commit('setPictometryActive', !this.$store.state.pictometry.active);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .inactive {\r\n    background-color: #ffffff;\r\n  }\r\n  .inactive:hover {\r\n    background-color: #ffffff;\r\n  }\r\n  .active {\r\n    background-color: rgb(243, 198, 19);\r\n  }\r\n  .active:hover {\r\n    background-color: rgb(243, 198, 19);\r\n  }\r\n\r\n</style>\r\n","<script>\r\n  export default {\r\n    props: [\r\n      'icon',\r\n      'latlng',\r\n      'height',\r\n      'width'\r\n    ],\r\n    render(h) {\r\n      return;\r\n    },\r\n    computed: {\r\n      ipa() {\r\n        return this.$store.state.pictometry.ipa;\r\n      },\r\n    },\r\n    mounted() {\r\n      // console.log('mounting PngMarker', this.icon);\r\n      this.placeMarker(this.$props.latlng);\r\n    },\r\n    beforeDestroy() {\r\n      // console.log('before destroying PngMarker', this.icon);\r\n      this.ipa.removeShapes(this.$store.state.pictometry.pngMarkerIds);\r\n      // console.log('before destroyed PngMarker', this.icon);\r\n    },\r\n    // destroyed() {\r\n    //   console.log('destroying PngMarker', this.icon);\r\n    //   this.ipa.removeShapes(this.$store.state.pictometry.pngMarkerIds);\r\n    //   console.log('destroyed PngMarker', this.icon);\r\n    // },\r\n    watch: {\r\n      latlng(nextLatlng) {\r\n        // console.log('PngMarker: latlng changed');\r\n        this.ipa.removeShapes(this.$store.state.pictometry.pngMarkerIds);\r\n        this.placeMarker(nextLatlng);\r\n      }\r\n    },\r\n    methods: {\r\n      constructLocalUrl(host, path1, path2) {\r\n        let url;\r\n        if (window.location.protocol === 'https:') {\r\n          // console.log('using https', window.location.protocol);\r\n          url = 'https://' + host + path1 + path2;\r\n        } else {\r\n          // console.log('using http', window.location.protocol);\r\n          url = 'http://' + host + path1 + path2;\r\n        }\r\n        // console.log('constructing url:', url);\r\n        return url\r\n      },\r\n      placeMarker(nextLatlng) {\r\n        // console.log('starting placeMarker', nextLatlng, this.$props.icon);\r\n        const port = window.location.port;\r\n        let host;\r\n        if (port != '') {\r\n          host = window.location.hostname + ':' + port;\r\n        } else {\r\n          host = window.location.hostname;\r\n        }\r\n        const pngMarker = {\r\n          type : this.ipa.SHAPE_TYPE.MARKER,\r\n          center: { y: nextLatlng[0], x: nextLatlng[1]},\r\n          markerImageHeight: this.$props.height,\r\n          markerImageWidth: this.$props.width,\r\n          markerOffsetX: this.$props.offsetX,\r\n          markerOffsetY: this.$props.offsetY,\r\n          markerImage: this.constructLocalUrl(host, '/', this.$props.icon),\r\n          onShapeClick: 'true'\r\n        };\r\n        this.ipa.addShapes([pngMarker], this.didAddShapes)\r\n      },\r\n      didAddShapes(result) {\r\n        // const pngMarkerIds = shapes.filter(shape => {\r\n        //                         return shape.success === 'true';\r\n        //                       }).map(shape => shape.shapeId);\r\n        // this.$store.commit('setPictometryPngMarkerIds', pngMarkerIds);\r\n        for ( var i = 0; i < result.length; i++) {\r\n          if ( result[i].success === 'false' ) {\r\n            console.log(result[i].error);\r\n          } else {\r\n            const pngMarkerIds = this.$store.state.pictometry.pngMarkerIds;\r\n            // console.log('pngMarkerIds', pngMarkerIds);\r\n            pngMarkerIds.push(result[i].shapeId);\r\n\r\n          }\r\n        }\r\n      },\r\n    }\r\n  };\r\n</script>\r\n","<script>\r\n  export default {\r\n    props: [\r\n      'latlng',\r\n      'rotationAngle',\r\n      'hFov'\r\n    ],\r\n    render(h) {\r\n      return;\r\n    },\r\n    computed: {\r\n      ipa() {\r\n        return this.$store.state.pictometry.ipa;\r\n      },\r\n      zoom() {\r\n        return this.$store.state.pictometry.zoom;\r\n      },\r\n      radius() {\r\n        const zoomMap = {\r\n          '17': 75,\r\n          '18': 50,\r\n          '19': 25,\r\n          '20': 15,\r\n          '21': 10,\r\n          '22': 10,\r\n          '23': 10,\r\n          '24': 10\r\n        }\r\n        return zoomMap[this.zoom]\r\n        // return zoomMap[this.$store.state.map.zoom]\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getViewConeLatLon();\r\n    },\r\n    beforeDestroy() {\r\n      this.ipa.removeShapes(this.$store.state.pictometry.shapeIds);\r\n    },\r\n    watch: {\r\n      radius(nextRadius) {\r\n        // this.ipa.getMetaData(function(e) {\r\n        //   console.log(e);\r\n        // });\r\n        // this.ipa.getZoomRange(function(e) {\r\n        //   console.log(e);\r\n        // })\r\n        // console.log('radius:', nextRadius);\r\n        this.getViewConeLatLon();\r\n      },\r\n      rotationAngle() {\r\n        this.ipa.removeShapes(this.$store.state.pictometry.shapeIds);\r\n        this.getViewConeLatLon();\r\n      },\r\n      latlng() {\r\n        this.ipa.removeShapes(this.$store.state.pictometry.shapeIds);\r\n        this.getViewConeLatLon();\r\n      },\r\n    },\r\n    methods: {\r\n      getViewConeLatLon() {\r\n        // console.log('getViewConeLatLon is running');\r\n        const camLat = this.latlng[0];\r\n        const camLon = this.latlng[1];\r\n        // Earth's radius\r\n        const ER=6378137;\r\n        // viewcone radius, for scaling its size\r\n        // const camR = 10;\r\n        const camR = this.radius;\r\n        // Angle1 - camera angle off of N, Angle2 - fov angle\r\n        const Angle1 = this.rotationAngle;\r\n        const Angle2 = parseFloat(this.hFov) * 180/Math.PI;\r\n\r\n        const dnLP = Math.cos((Angle1+Angle2/2) * Math.PI/180)*camR;\r\n        const deLP = Math.sin((Angle1+Angle2/2) * Math.PI/180)*camR;\r\n        const dnRP = Math.cos((Angle1-Angle2/2) * Math.PI/180)*camR;\r\n        const deRP = Math.sin((Angle1-Angle2/2) * Math.PI/180)*camR;\r\n        //Coordinate offsets in radians\r\n        const dLatLP = dnLP/ER;\r\n        const dLonLP = deLP/(ER*Math.cos(Math.PI*camLat/180));\r\n        const dLatRP = dnRP/ER;\r\n        const dLonRP = deRP/(ER*Math.cos(Math.PI*camLat/180));\r\n        //OffsetPosition\r\n        const camRightLat = camLat + dLatLP * 180/Math.PI;\r\n        const camRightLon = camLon + dLonLP * 180/Math.PI;\r\n        const camLeftLat = camLat + dLatRP * 180/Math.PI;\r\n        const camLeftLon = camLon + dLonRP * 180/Math.PI;\r\n\r\n        const coordinates = [ {y : camLat, x : camLon, z: 0.0}, {y : camRightLat, x : camRightLon, z: 0.0}, {y : camLeftLat, x : camLeftLon, z: 0.0} ]\r\n        this.placeViewCone(coordinates)\r\n      },\r\n\r\n      placeViewCone: function(coords){\r\n        // console.log('placeViewCone is running');\r\n        const self = this;\r\n        const viewTriangle = {\r\n          type: this.ipa.SHAPE_TYPE.POLYGON,\r\n          coordinates: coords,\r\n          // coordinates : [ {y : app.state.stViewY, x : app.state.stViewX, z: 0.0}, {y : app.state.viewCone.camRightLat, x : app.state.viewCone.camRightLon, z: 0.0}, {y : app.state.viewCone.camLeftLat, x : app.state.viewCone.camLeftLon, z: 0.0} ],\r\n          strokeColor: \"#00a0ee\",\r\n          strokeOpacity: 0.75,\r\n          strokeWeight: 2,\r\n          fillColor: \"#00a0ee\",\r\n          fillOpacity: 0.25,\r\n          altitudeMode: this.ipa.ALTITUDE_MODE.RELATIVE_TO_GROUND\r\n        };\r\n        this.ipa.addShapes([viewTriangle], function(result) {\r\n          for ( var i = 0; i < result.length; i++) {\r\n            if ( result[i].success === 'false' ) {\r\n              alert(result[i].error);\r\n            } else {\r\n              const shapeIds = self.$store.state.pictometry.shapeIds;\r\n              // console.log('shapeIds:', shapeIds);\r\n              // console.log('current shapeId:', result[i].shapeId);\r\n              shapeIds.push(result[i].shapeId);\r\n              const test = shapeIds.slice(0, -1)\r\n              // console.log('slice', test);\r\n              self.ipa.removeShapes(shapeIds.slice(0, -1));\r\n            }\r\n          }\r\n        });\r\n      },\r\n    }\r\n  };\r\n</script>\r\n","<template>\r\n  <div id=\"pict-container\"\r\n       :class=\"this.pictContainerClass\"\r\n  >\r\n    <div id=\"in-pict-div\"\r\n         @click=\"this.popoutClicked\"\r\n         v-if=\"this.isMobileOrTablet === false\"\r\n    >\r\n      <font-awesome-icon icon=\"external-link\" class=\"popout-icon\" />\r\n    </div>\r\n    <iframe id=\"pictometry-ipa\"\r\n            src=\"#\"\r\n            ref=\"pictometryIpa\"\r\n    >\r\n    </iframe>\r\n    <!-- </div> -->\r\n    <div>\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import $ from 'jquery';\r\n  import md5 from 'blueimp-md5';\r\n\r\n  export default {\r\n    props: [\r\n      'apiKey',\r\n      'secretKey',\r\n    ],\r\n    created() {\r\n      this.$IFRAME_ID = 'pictometry-ipa';\r\n    },\r\n    mounted() {\r\n      // fetch pictometry ipa script\r\n      const scriptUrl = 'https://pol.pictometry.com/ipa/v1/embed/host.php' + '?apikey=' + this.apiKey;\r\n      const self = this;\r\n      $.getScript(scriptUrl, self.init);\r\n    },\r\n    computed: {\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active;\r\n      },\r\n      pictContainerClass() {\r\n        if (this.cyclomediaActive) {\r\n          return 'medium-8 large-8 columns mb-panel';\r\n        } else {\r\n          return 'medium-24 large-24 columns mb-panel';\r\n        }\r\n      },\r\n      mapCenter() {\r\n        // return this.$store.state.geocode.data.geometry.coordinates;\r\n        return this.$store.state.pictometry.map.center;\r\n      },\r\n      mapZoom() {\r\n        // const mapZoom = this.$store.state.map.zoom;\r\n        // let zoom;\r\n        // if (this.cyclomediaActive) {\r\n        //   zoom = mapZoom\r\n        // } else {\r\n        //   zoom = mapZoom + 1;\r\n        // }\r\n        // return zoom;\r\n        return this.$store.state.pictometry.map.zoom;\r\n      },\r\n    },\r\n    watch: {\r\n      mapCenter(nextCenter) {\r\n        const [x, y] = nextCenter;\r\n        const zoom = this.mapZoom;\r\n        if (this.$ipa) {\r\n          this.$ipa.setLocation({ x, y, zoom });\r\n        }\r\n      },\r\n      mapZoom(nextZoom) {\r\n        // console.log('watch zoomSentToPict', nextZoom);\r\n        if (this.$ipa) {\r\n          this.$ipa.setLocation({\r\n            y: this.mapCenter.lat,\r\n            x: this.mapCenter.lng,\r\n            zoom: nextZoom\r\n          });\r\n        }\r\n      },\r\n      cyclomediaActive(nextStatus) {\r\n        if (nextStatus) {\r\n          // console.log('pict: cyclo on');\r\n          this.$ipa.showDashboard({\r\n            zoom: false,\r\n            imageFilter: false,\r\n            layers: false,\r\n            nextPrevious: false,\r\n            tools: false,\r\n            annotations: false,\r\n            rotation: false,\r\n            clearMeasurements: false,\r\n            exportPdf: false,\r\n            dualPane: false,\r\n            imageDate: false,\r\n            panTool: false,\r\n            exportImage: false,\r\n            areaTool: false,\r\n            distanceTool: false,\r\n            heightTool: false,\r\n            locationTool: false,\r\n            elevationTool: false,\r\n            bearingTool: false,\r\n            slopeTool: false,\r\n            xyzTool: false,\r\n            identifyPoint: false,\r\n            identifyBox: false\r\n          });\r\n        } else {\r\n          // console.log('pict: cyclo off');\r\n          this.$ipa.showDashboard({\r\n            zoom: true,\r\n            imageFilter: true,\r\n            layers: true,\r\n            nextPrevious: true,\r\n            tools: true,\r\n            annotations: true,\r\n            rotation: true,\r\n            clearMeasurements: true,\r\n            exportPdf: true,\r\n            dualPane: true,\r\n            imageDate: true,\r\n            panTool: true,\r\n            exportImage: true,\r\n            areaTool: true,\r\n            distanceTool: true,\r\n            heightTool: true,\r\n            locationTool: true,\r\n            elevationTool: true,\r\n            bearingTool: true,\r\n            slopeTool: true,\r\n            xyzTool: true,\r\n            identifyPoint: true,\r\n            identifyBox: true\r\n          });\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      popoutClicked() {\r\n        const map = this.$store.state.map.map;\r\n        const center = map.getCenter();\r\n        window.open('//pictometry.phila.gov/?' + center.lat + '&' + center.lng, '_blank');\r\n        this.$store.commit('setPictometryActive', false);\r\n      },\r\n      init() {\r\n        // construct signed url\r\n        const d = new Date();\r\n        const t = Math.floor(d.getTime() / 1000);\r\n        const unsignedUrl = 'https://pol.pictometry.com/ipa/v1/load.php' + \"?apikey=\" + this.apiKey + \"&ts=\" + t;\r\n        const hash = md5(unsignedUrl, this.secretKey);\r\n        const iframeId = this.$IFRAME_ID;\r\n        const signedUrl = unsignedUrl + \"&ds=\" + hash + \"&app_id=\" + iframeId;\r\n\r\n        // set the iframe src to load the IPA\r\n        const iframe = this.$refs.pictometryIpa;\r\n        // REVIEW can we bind this to a computed instead?\r\n        iframe.setAttribute('src', signedUrl);\r\n\r\n        // create pictometry host\r\n        const ipa = this.$ipa = new PictometryHost(iframeId, 'https://pol.pictometry.com/ipa/v1/load.php');\r\n        this.$store.commit('setPictometryIpa', ipa);\r\n        ipa.ready = this.ipaReady;\r\n      },\r\n      ipaReady() {\r\n        this.$ipa.setLocation({\r\n          y: this.mapCenter.lat,\r\n          x: this.mapCenter.lng,\r\n          zoom: this.mapZoom\r\n        });\r\n\r\n        const self = this;\r\n\r\n        this.$ipa.addListener('onendzoom', function(zoom) {\r\n          // console.log('widget: ipa detected zoom change to', zoom);\r\n          self.$store.commit('setPictometryZoom', zoom.level);\r\n        })\r\n      },\r\n    }, // end of methods\r\n  }; // end of export\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\nheader.site-header > .row:last-of-type {\r\n  background: #2176d2;\r\n}\r\n\r\n#in-pict-div {\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 0px;\r\n  background-color: white;\r\n  border: 0px solid;\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor:pointer;\r\n  /* float: right; */\r\n  /*display:none;*/\r\n  /*z-index: 2000000;*/\r\n  /*position: relative;\r\n  top: 0px;\r\n  right: 0px;*/\r\n}\r\n\r\n.popout-icon {\r\n  margin-top: 8.5px;\r\n  font-size: 15px;\r\n  margin-left: 8.5px;\r\n}\r\n\r\n#pict-container {\r\n  padding: 0px;\r\n  height: 50%;\r\n  position: relative;\r\n  display: none;\r\n}\r\n\r\n@media screen and (min-width: 46.875em) {\r\n  #pict-container {\r\n    display: block;\r\n  }\r\n}\r\n\r\n/*#iframe-div {\r\n}*/\r\n\r\n#pictometry-ipa {\r\n  height: 100%;\r\n  width: 100%;\r\n  border: 0px;\r\n}\r\n\r\n#search-container {\r\n    float: right;\r\n}\r\n\r\n#search-input {\r\n    float: left;\r\n    width: 400px;\r\n}\r\n\r\n#search-button {\r\n    height: 2.78571rem;\r\n}\r\n\r\n#data-panel {\r\n    background: #fff;\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n    height: 100%;\r\n}\r\n\r\n#data-panel > h1 {\r\n    color: #666;\r\n}\r\n\r\n#data-row-list > a {\r\n    background: #f5f5f5;\r\n    border: 1px solid #ddd;\r\n    display: block;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n    height: 70px;\r\n    line-height: 45px;\r\n    /*margin-left: 10px;*/\r\n    /*margin-right: 10px;*/\r\n    padding: 10px;\r\n    /*vertical-align: middle;*/\r\n    /*text-align: middle;*/\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\r\n    margin-bottom: 8px;\r\n}\r\n\r\n#data-row-list > a:hover {\r\n    background: #fff;\r\n    color: inherit;\r\n}\r\n\r\n#data-row-list .data-row-link-icon {\r\n    padding-right: 30px;\r\n}\r\n\r\n.data-row {\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    display: none;\r\n}\r\n\r\n.data-row table th, .data-row table td {\r\n    font-size: 15px;\r\n    margin-left: 8.5px;\r\n  }\r\n\r\n  #pict-container {\r\n    padding: 0px;\r\n    height: 50%;\r\n    position: relative;\r\n  }\r\n\r\n  /*#iframe-div {\r\n  }*/\r\n\r\n\r\n</style>\r\n","<script>\r\n  export default {\r\n    render(h) {\r\n      return;\r\n    },\r\n    computed: {\r\n      ipa() {\r\n        return this.$store.state.pictometry.ipa;\r\n      },\r\n      activeTopic() {\r\n        return this.$store.state.activeTopic;\r\n      }\r\n    },\r\n    mounted() {\r\n      this.didActivateTopic(this.activeTopic);\r\n    },\r\n    beforeDestroy() {\r\n      this.didDeactivateTopic(this.activeTopic);\r\n    },\r\n    watch: {\r\n      activeTopic(nextTopic, prevTopic) {\r\n        this.didDeactivateTopic(prevTopic);\r\n        this.didActivateTopic(nextTopic);\r\n      }\r\n    },\r\n    methods: {\r\n      didActivateTopic(topic) {\r\n        // console.log('didActivateTopic is firing with topic: ', topic);\r\n        switch (topic) {\r\n          case 'deeds':\r\n            // turn on DOR Parcels\r\n            this.ipa.showLayer({\r\n              id: 114828,\r\n              visible: true,\r\n            })\r\n            break;\r\n          case 'zoning':\r\n            // turn on zoning\r\n            this.ipa.showLayer({\r\n              id: 112230,\r\n              visible: true,\r\n            });\r\n            break;\r\n          case 'water':\r\n            // turn on water Parcels\r\n            this.ipa.showLayer({\r\n              id: 108982,\r\n              visible: true,\r\n            })\r\n            break;\r\n\r\n          default:\r\n            // turn off DOR parcels\r\n            this.ipa.showLayer({\r\n              id: 113478,\r\n              visible: false,\r\n            });\r\n            // turn off zoning\r\n            this.ipa.showLayer({\r\n              id: 112230,\r\n              visible: false,\r\n            });\r\n        }\r\n      },\r\n\r\n      didDeactivateTopic(topic) {\r\n        switch (topic) {\r\n          case 'deeds':\r\n            // turn off DOR parcels\r\n            this.ipa.showLayer({\r\n              id: 114828,\r\n              visible: false,\r\n            });\r\n            break;\r\n\r\n          case 'zoning':\r\n            // turn on zoning\r\n            this.ipa.showLayer({\r\n              id: 112230,\r\n              visible: false,\r\n            });\r\n            break;\r\n\r\n          case 'water':\r\n            // turn off water\r\n            this.ipa.showLayer({\r\n              id: 108982,\r\n              visible: false,\r\n            })\r\n\r\n          default:\r\n            // turn off DOR parcels\r\n            this.ipa.showLayer({\r\n              id: 113478,\r\n              visible: false,\r\n            });\r\n            // turn off zoning\r\n            this.ipa.showLayer({\r\n              id: 112230,\r\n              visible: false,\r\n            });\r\n        }\r\n      },\r\n\r\n\r\n    }\r\n  };\r\n</script>\r\n","// some default values, which get overwritten by the app importing\r\n// these could be put in the object instead of this roundabout way\r\n// but this is to remind me that mapboard store redefines these values\r\nlet config = {\r\n  map: {\r\n    center:[-75.163471, 39.953338],\r\n    zoom: 18,\r\n  },\r\n  // pictometry: {\r\n  //   enabled: '',\r\n  // },\r\n  // cyclomedia: {\r\n  //   enabled: '',\r\n  // }\r\n}\r\n\r\nconst initialState = {\r\n  activeTopic: '',\r\n  shouldShowAddressCandidateList: false,\r\n\r\n  // the leaflet map object\r\n  map: {\r\n    location: {\r\n      lat: null,\r\n      lng: null\r\n    },\r\n    center: config.map.center,\r\n    bounds: {\r\n      _northEast: {\r\n        lat: null,\r\n        lng: null,\r\n      },\r\n      _southWest: {\r\n        lat: null,\r\n        lng: null,\r\n      },\r\n    },\r\n    zoom: config.map.zoom,\r\n    boundsBasedOnShape: null,\r\n    map: null,\r\n    // this gets set to the parcel layer for the default topic by\r\n    // DataManager.resetGeocode; see note above for activeTopic and\r\n    basemap: '',\r\n    imagery: 'imagery2018',\r\n    shouldShowImagery: false,\r\n    // this is the key for the active overlay image (eg regmap)\r\n    imageOverlay: null,\r\n    imageOverlayOpacity: null,\r\n    filters: [],\r\n    watchPositionOn: false,\r\n  },\r\n\r\n  cyclomedia: {\r\n    initialized: false,\r\n    navBarOpen: false,\r\n    // surfaceCursorOn: true,\r\n    latLngFromMap: null,\r\n    orientation: {\r\n      yaw: null,\r\n      hFov: null,\r\n      xyz: null,\r\n    },\r\n    active: false,\r\n    recordings: [],\r\n  },\r\n  // we need this to know whether or not to force an update on the first show\r\n  pictometry: {\r\n    ipa: null,\r\n    active: false,\r\n    shapeIds: [],\r\n    pngMarkerIds: [],\r\n    zoom: null,\r\n    // this is the state of the main leaflet map. when these values change\r\n    // the pictometry widget should react. the reason these are duplicated\r\n    // here is to avoid an infinite loop in the Map component when the\r\n    // viewport changes.\r\n    map: {\r\n      center: config.map.center,\r\n      zoom: config.map.zoom\r\n    }\r\n  },\r\n};\r\n\r\nconst pvmStore = {\r\n  state: initialState,\r\n  mutations: {\r\n    setWatchPositionOn(state, payload) {\r\n      state.map.watchPositionOn = payload;\r\n    },\r\n    setLocation(state, payload) {\r\n      state.map.location.lat = payload.lat;\r\n      state.map.location.lng = payload.lng;\r\n    },\r\n    setActiveTopic(state, payload) {\r\n      state.activeTopic = payload;\r\n    },\r\n    setMapZoom(state, payload) {\r\n      state.map.zoom = payload;\r\n    },\r\n    setImagery(state, payload) {\r\n      state.map.imagery = payload;\r\n    },\r\n    setShouldShowImagery(state, payload) {\r\n      state.map.shouldShowImagery = payload;\r\n    },\r\n    setShouldShowAddressCandidateList(state, payload) {\r\n      state.shouldShowAddressCandidateList = payload;\r\n    },\r\n\r\n\r\n    setCyclomediaInitialized(state, payload) {\r\n      state.cyclomedia.initialized = payload;\r\n    },\r\n    setPictometryActive(state, payload) {\r\n      // if (!config.pictometry.enabled) {\r\n      //   return;\r\n      // }\r\n      state.pictometry.active = payload;\r\n    },\r\n    setCyclomediaActive(state, payload) {\r\n      // console.log('setCyclomediaActive is running, config:', config);\r\n      // if (!config.cyclomedia.enabled) {\r\n      //   return;\r\n      // }\r\n      state.cyclomedia.active = payload;\r\n    },\r\n    setCyclomediaYaw(state, payload) {\r\n      state.cyclomedia.orientation.yaw = payload\r\n    },\r\n    setCyclomediaHFov(state, payload) {\r\n      state.cyclomedia.orientation.hFov = payload\r\n    },\r\n    setCyclomediaXyz(state, payload) {\r\n      state.cyclomedia.orientation.xyz = payload\r\n    },\r\n    setCyclomediaRecordings(state, payload) {\r\n      state.cyclomedia.recordings = payload;\r\n    },\r\n    setCyclomediaLatLngFromMap(state, payload) {\r\n      state.cyclomedia.latLngFromMap = payload;\r\n      // const { lat, lng } = payload || {};\r\n      // state.cyclomedia.latLngFromMap[0] = lat;\r\n      // state.cyclomedia.latLngFromMap[1] = lng;\r\n    },\r\n    setCyclomediaNavBarOpen(state, payload) {\r\n      state.cyclomedia.navBarOpen = payload;\r\n    },\r\n    // setCyclomediaSurfaceCursorOn(state, payload) {\r\n    //   state.cyclomedia.surfaceCursorOn = payload;\r\n    // },\r\n\r\n    setPictometryIpa(state, payload) {\r\n      state.pictometry.ipa = payload;\r\n    },\r\n    setPictometryShapeIds(state, payload) {\r\n      state.pictometry.shapeIds = payload;\r\n    },\r\n    setPictometryPngMarkerIds(state, payload) {\r\n      state.pictometry.pngMarkerIds = payload;\r\n    },\r\n    // this is the leaflet map center updated when the map is moved\r\n    setPictometryMapCenter(state, payload) {\r\n      state.pictometry.map.center = payload;\r\n    },\r\n    setPictometryMapZoom(state, payload) {\r\n      state.pictometry.map.zoom = payload;\r\n    },\r\n    setPictometryZoom(state, payload) {\r\n      state.pictometry.zoom = payload;\r\n    },\r\n\r\n\r\n    setMap(state, payload) {\r\n      state.map.map = payload.map;\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default pvmStore;\r\n","\r\n// Font Awesome Icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { dom } from '@fortawesome/fontawesome-svg-core'\r\ndom.watch() // This will kick of the initial replacement of i to svg tags and configure a MutationObserver\r\n\r\nimport { faDotCircle } from '@fortawesome/pro-regular-svg-icons/faDotCircle';\r\nimport { faSearch } from '@fortawesome/pro-solid-svg-icons/faSearch';\r\nimport { faTimes } from '@fortawesome/pro-solid-svg-icons/faTimes';\r\nimport { faMapMarkerAlt } from '@fortawesome/pro-solid-svg-icons/faMapMarkerAlt';\r\nimport { faCaretLeft } from '@fortawesome/pro-solid-svg-icons/faCaretLeft';\r\nimport { faCaretRight } from '@fortawesome/pro-solid-svg-icons/faCaretRight';\r\nlibrary.add(faSearch, faTimes, faMapMarkerAlt, faDotCircle, faCaretLeft, faCaretRight);\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\n\r\n\r\n// Leaflet\r\nimport Map_ from './leaflet/Map.vue';\r\nimport Control from './leaflet/Control.vue';\r\nimport Geojson from './leaflet/Geojson.vue';\r\nimport CircleMarker from './leaflet/CircleMarker.vue';\r\nimport ControlCorner from './leaflet/ControlCorner.vue';\r\nimport PopUp from './leaflet/PopUp.vue';\r\nimport PopUpContent from './leaflet/PopUpContent.vue';\r\nimport Polygon_ from './leaflet/Polygon.vue';\r\nimport Polyline_ from './leaflet/Polyline.vue';\r\n\r\n// Esri-Leaflet\r\nimport EsriTiledMapLayer from './esri-leaflet/TiledMapLayer.vue';\r\nimport EsriTiledOverlay from './esri-leaflet/TiledOverlay.vue';\r\nimport EsriDynamicMapLayer from './esri-leaflet/DynamicMapLayer.vue';\r\nimport EsriFeatureLayer from './esri-leaflet/FeatureLayer.vue';\r\nimport WebMap from './esri-leaflet/WebMap.vue';\r\nimport WebMapLayer from './esri-leaflet/WebMapLayer.vue';\r\n\r\n// our components\r\nimport AddressInput from './components/AddressInput.vue';\r\nimport AddressCandidateList from './components/AddressCandidateList.vue';\r\nimport OpacitySlider from './components/OpacitySlider.vue';\r\nimport VectorMarker from './components/VectorMarker.vue';\r\nimport PngMarker from './components/PngMarker.vue';\r\nimport BasemapToggleControl from './components/BasemapToggleControl.vue';\r\nimport BasemapSelectControl from './components/BasemapSelectControl.vue';\r\nimport FullScreenMapToggleTab from './components/FullScreenMapToggleTab.vue';\r\nimport FullScreenMapToggleTabVertical from './components/FullScreenMapToggleTabVertical.vue';\r\nimport LocationControl from './components/LocationControl.vue';\r\nimport MeasureControl from './components/MeasureControl.vue';\r\nimport LegendControl from './components/LegendControl.vue';\r\nimport BasemapTooltip from './components/BasemapTooltip.vue';\r\nimport ModalAbout from './components/ModalAbout.vue';\r\n\r\n// Cyclomedia\r\nimport CyclomediaButton from './cyclomedia/Button.vue';\r\nimport CyclomediaRecordingCircle from './cyclomedia/RecordingCircle.vue';\r\nimport CyclomediaRecordingsClient from './cyclomedia/recordings-client';\r\nimport SvgViewConeMarker from './cyclomedia/SvgViewConeMarker.vue';\r\nimport CyclomediaMixin from './cyclomedia/map-panel-mixin.js';\r\nimport CyclomediaWidget from './cyclomedia/Widget.vue';\r\n\r\n// Pictometry\r\nimport PictometryButton from './pictometry/Button.vue';\r\nimport PictometryMixin from './pictometry/map-panel-mixin.js';\r\nimport PictometryPngMarker from './pictometry/PngMarker.vue';\r\nimport PictometryViewCone from './pictometry/ViewCone.vue';\r\nimport PictometryWidget from './pictometry/Widget.vue';\r\nimport PictometryLayer from './pictometry/Layer.vue';\r\n\r\nimport pvmStore from './store.js';\r\n\r\n\r\n// Exports\r\n// Leaflet\r\n// exports.Map_ = Map_;\r\n// exports.Control = Control;\r\n// exports.Geojson = Geojson;\r\n// exports.CircleMarker =  CircleMarker;\r\n// exports.ControlCorner =  ControlCorner;\r\n// exports.PopUp = PopUp;\r\n// exports.PopUpContent = PopUpContent;\r\n// exports.Polygon_ = Polygon_;\r\n// exports.Polyline_ = Polyline_;\r\n//\r\n// // Esri-Leaflet\r\n// exports.EsriTiledMapLayer =  EsriTiledMapLayer;\r\n// exports.EsriTiledOverlay =  EsriTiledOverlay;\r\n// exports.EsriDynamicMapLayer =  EsriDynamicMapLayer;\r\n// exports.EsriFeatureLayer =  EsriFeatureLayer;\r\n// exports.WebMap = WebMap;\r\n// exports.WebMapLayer = WebMapLayer;\r\n//\r\n// // our components\r\n// exports.AddressInput =  AddressInput;\r\n// exports.AddressCandidateList =  AddressCandidateList;\r\n// exports.OpacitySlider =  OpacitySlider;\r\n// exports.VectorMarker =  VectorMarker;\r\n// exports.PngMarker =  PngMarker;\r\n// exports.BasemapToggleControl =  BasemapToggleControl;\r\n// exports.BasemapSelectControl =  BasemapSelectControl;\r\n// exports.FullScreenMapToggleTab =  FullScreenMapToggleTab;\r\n// exports.FullScreenMapToggleTabVertical =  FullScreenMapToggleTabVertical;\r\n// exports.LocationControl =  LocationControl;\r\n// exports.MeasureControl =  MeasureControl;\r\n// exports.LegendControl =  LegendControl;\r\n// exports.BasemapTooltip =  BasemapTooltip;\r\n// exports.ModalAbout = ModalAbout;\r\n//\r\n// // Cyclomedia\r\n// exports.CyclomediaButton =  CyclomediaButton;\r\n// exports.CyclomediaRecordingCircle =  CyclomediaRecordingCircle;\r\n// exports.CyclomediaRecordingsClient =  CyclomediaRecordingsClient;\r\n// exports.SvgViewConeMarker =  SvgViewConeMarker;\r\n// exports.CyclomediaMixin = CyclomediaMixin;\r\n// exports.CyclomediaWidget = CyclomediaWidget;\r\n//\r\n// // Pictometry\r\n// exports.PictometryButton =  PictometryButton;\r\n// exports.PictometryMixin = PictometryMixin;\r\n// exports.PictometryPngMarker = PictometryPngMarker;\r\n// exports.PictometryViewCone = PictometryViewCone;\r\n// exports.PictometryWidget = PictometryWidget;\r\n// exports.PictometryLayer = PictometryLayer;\r\n//\r\n// exports.pvmStore = pvmStore;\r\n\r\n// export exports;\r\nexport {\r\n  Map_,\r\n}\r\n"],"names":["const","let","Map","LatLng","super","L","methods","L.DivIcon","L.point","L.Util","dom","library","faSearch","faTimes","faMapMarkerAlt","faDotCircle","faCaretLeft","faCaretRight"],"mappings":"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"}